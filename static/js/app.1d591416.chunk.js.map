{"version":3,"sources":["D2App/components/Layout/LayoutContainer.module.css","D2App/components/Layout/LayoutSidebar.module.css","D2App/components/Layout/LayoutContent.module.css","D2App/components/AppTitle/AppTitle.module.css","D2App/components/Charts/ChartHeader.module.css","D2App/components/Charts/ChartWrapper.module.css","D2App/constants/categories.js","D2App/constants/intervals.js","D2App/constants/aggregations.js","D2App/constants/chartTypes.js","D2App/constants/eventTypes.js","D2App/constants/pageSizes.js","D2App/constants/sortOrders.js","D2App/components/FilterFields/validators.js","D2App/components/FilterFields/DateRangeField.js","D2App/components/FilterFields/IntervalField.js","D2App/components/FilterFields/AggregationField.js","D2App/components/FilterFields/ChartTypeField.js","D2App/components/FilterFields/EventTypeField.js","D2App/components/FilterFields/PageSizeField.js","D2App/components/FilterFields/SortOrderField.js","D2App/components/FilterFields/FilterFields.js","D2App/components/Layout/LayoutContainer.js","D2App/components/Layout/LayoutSidebar.js","D2App/components/Layout/LayoutContent.js","D2App/components/CategoryField/CategoryField.js","D2App/components/AppTitle/AppTitle.js","D2App/components/Queries/TopFavoritesQuery.js","D2App/components/Queries/DataStatisticsQuery.js","D2App/components/Visualization/TopFavoritesVisualization.js","D2App/selectors/date.js","D2App/components/Tables/TableWrapper.js","D2App/components/Tables/DataValuesTable.js","D2App/components/Tables/UsersTable.js","D2App/components/Charts/ChartHeader.js","D2App/components/Charts/ChartWrapper.js","D2App/components/Charts/selectors.js","D2App/components/Charts/options.js","D2App/components/Charts/UsersChart.js","D2App/components/Charts/DataValuesChart.js","D2App/components/Visualization/DataStatisticsVisualization.js","D2App/components/Visualization/Visualization.js","D2App/components/App/createDefaultDates.js","D2App/components/App/App.js","D2App/components/App/index.js"],"names":["module","exports","categories","value","label","i18n","t","subtitle","intervals","aggregations","chartTypes","eventTypes","pageSizes","sortOrders","validateStartDate","startDate","endDate","startMoment","moment","endMoment","isAfter","validateEndDate","isBefore","validateDate","date","isValid","DateRangeField","setStartDate","setEndDate","setIsValid","useState","startDateError","setStartDateError","endDateError","setEndDateError","type","error","validationText","onChange","errorMessage","endDateErrorMessage","startDateErrorMessage","IntervalField","interval","setInterval","selected","map","key","AggregationField","aggregation","setAggregation","ChartTypeField","chartType","setChartType","EventTypeField","eventType","setEventType","PageSizeField","pageSize","setPageSize","SortOrderField","sortOrder","setSortOrder","FilterFields","category","isTopFavorites","isFavoriteViews","Fragment","LayoutContainer","children","className","styles","container","LayoutSidebar","sidebar","LayoutContent","content","CategoryField","setCategory","AppTitle","title","query","favorites","resource","params","TopFavoritesQuery","useDataQuery","lazy","variables","loading","data","called","refetch","useEffect","dataStatistics","DataStatisticsQuery","isStale","setIsStale","onDone","onComplete","onError","TopFavoritesVisualization","getIntervalDate","year","month","week","day","format","zeroIndexedMonth","TableWrapper","DataValuesTable","savedDataValues","intervalDate","UsersTable","activeUsers","users","ChartHeader","ChartWrapper","outerContainer","innerContainer","chartContainer","getTitles","selectedCategory","CATEGORIES","find","getLabels","options","animation","duration","legend","position","maintainAspectRatio","elements","line","tension","fill","backgroundColor","scales","yAxes","scaleLabel","display","labelString","UsersChart","labels","datasets","d","borderColor","getUsersDatasets","DataValuesChart","getDataValuesDatasets","DataStatisticsVisualization","Visualization","createDefaultDates","initialStartDate","subtract","initialEndDate","App"],"mappings":"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","file":"static/js/app.1d591416.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LayoutContainer_container__2gt-1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"LayoutSidebar_sidebar__38x-X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"LayoutContent_content__3pEdj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"AppTitle_title__mjsfQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ChartHeader_title__ff7A2\",\"subtitle\":\"ChartHeader_subtitle__2JAVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerContainer\":\"ChartWrapper_outerContainer__2BU2T\",\"innerContainer\":\"ChartWrapper_innerContainer__5ZEsg\",\"chartContainer\":\"ChartWrapper_chartContainer__jt1gD\"};","import i18n from '@dhis2/d2-i18n';\nexport const FAVORITE_VIEWS = 'FAVORITE_VIEWS';\nexport const FAVORITES_SAVED = 'FAVORITES_SAVED';\nexport const USERS = 'USERS';\nexport const TOP_FAVORITES = 'TOP_FAVORITES';\nexport const DATA_VALUES = 'DATA_VALUES';\nconst categories = [{\n  value: FAVORITE_VIEWS,\n  label: i18n.t('Favorite views'),\n  subtitle: i18n.t('Number of times users looked at analysis favorites')\n}, {\n  value: FAVORITES_SAVED,\n  label: i18n.t('Favorites saved'),\n  subtitle: i18n.t('Number of analysis favorites created by users')\n}, {\n  value: USERS,\n  label: i18n.t('Users'),\n  subtitle: i18n.t('Number of users in the system')\n}, {\n  value: TOP_FAVORITES,\n  label: i18n.t('Top favorites')\n}, {\n  value: DATA_VALUES,\n  label: i18n.t('Data values'),\n  subtitle: i18n.t('Number of data values saved in the system')\n}];\nexport default categories;","import i18n from '@dhis2/d2-i18n';\nexport const DAY = 'DAY';\nexport const WEEK = 'WEEK';\nexport const MONTH = 'MONTH';\nexport const YEAR = 'YEAR';\nconst intervals = [{\n  value: DAY,\n  label: i18n.t('Day')\n}, {\n  value: WEEK,\n  label: i18n.t('Week')\n}, {\n  value: MONTH,\n  label: i18n.t('Month')\n}, {\n  value: YEAR,\n  label: i18n.t('Year')\n}];\nexport default intervals;","import i18n from '@dhis2/d2-i18n';\nexport const SUM = 'SUM';\nexport const AVERAGE = 'AVERAGE';\nconst aggregations = [{\n  value: SUM,\n  label: i18n.t('Sum')\n}, {\n  value: AVERAGE,\n  label: i18n.t('Average')\n}];\nexport default aggregations;","import i18n from '@dhis2/d2-i18n';\nexport const ALL = 'ALL';\nexport const TOTAL = 'TOTAL';\nconst chartTypes = [{\n  value: ALL,\n  label: i18n.t('All')\n}, {\n  value: TOTAL,\n  label: i18n.t('Total')\n}];\nexport default chartTypes;","import i18n from '@dhis2/d2-i18n';\nexport const CHART_VIEW = 'CHART_VIEW';\nexport const MAP_VIEW = 'MAP_VIEW';\nexport const REPORT_TABLE_VIEW = 'REPORT_TABLE_VIEW';\nexport const EVENT_REPORT_VIEW = 'EVENT_REPORT_VIEW';\nexport const EVENT_CHART_VIEW = 'EVENT_CHART_VIEW';\nexport const DASHBOARD_VIEW = 'DASHBOARD_VIEW';\nexport const DATA_SET_REPORT_VIEW = 'DATA_SET_REPORT_VIEW';\nconst eventTypes = [{\n  value: CHART_VIEW,\n  label: i18n.t('Chart')\n}, {\n  value: MAP_VIEW,\n  label: i18n.t('Map')\n}, {\n  value: REPORT_TABLE_VIEW,\n  label: i18n.t('Report table')\n}, {\n  value: EVENT_REPORT_VIEW,\n  label: i18n.t('Event report')\n}, {\n  value: EVENT_CHART_VIEW,\n  label: i18n.t('Event chart')\n}, {\n  value: DASHBOARD_VIEW,\n  label: i18n.t('Dashboard')\n}, {\n  value: DATA_SET_REPORT_VIEW,\n  label: i18n.t('Data set report')\n}];\nexport default eventTypes;","export const PS_5 = '5';\nexport const PS_10 = '10';\nexport const PS_15 = '15';\nexport const PS_20 = '20';\nexport const PS_25 = '25';\nconst pageSizes = [{\n  value: PS_5,\n  label: '5'\n}, {\n  value: PS_10,\n  label: '10'\n}, {\n  value: PS_15,\n  label: '15'\n}, {\n  value: PS_20,\n  label: '20'\n}, {\n  value: PS_25,\n  label: '25'\n}];\nexport default pageSizes;","import i18n from '@dhis2/d2-i18n';\nexport const ASC = 'ASC';\nexport const DESC = 'DESC';\nconst sortOrders = [{\n  value: ASC,\n  label: i18n.t('Ascending')\n}, {\n  value: DESC,\n  label: i18n.t('Descending')\n}];\nexport default sortOrders;","import moment from 'moment';\nimport i18n from '@dhis2/d2-i18n'; // The expected date format\n\nconst expectedFormat = 'YYYY-MM-DD'; // Validates a start date, compared to an end date\n\nexport const validateStartDate = (startDate, endDate) => {\n  const startMoment = moment(startDate, expectedFormat);\n  const endMoment = moment(endDate, expectedFormat);\n\n  if (startMoment.isAfter(endMoment)) {\n    return i18n.t('Start date should be before end date');\n  }\n\n  return '';\n}; // Validates an end date, compared to a start date\n\nexport const validateEndDate = (startDate, endDate) => {\n  const startMoment = moment(startDate, expectedFormat);\n  const endMoment = moment(endDate, expectedFormat);\n\n  if (endMoment.isBefore(startMoment)) {\n    return i18n.t('End date should be after start date');\n  }\n\n  return '';\n}; // Validates a single date\n\nexport const validateDate = date => {\n  if (!date) {\n    return i18n.t('Please fill in a date');\n  }\n\n  const dateMoment = moment(date, expectedFormat, true);\n\n  if (!dateMoment.isValid()) {\n    return i18n.t('Please use the format yyyy-mm-dd');\n  }\n\n  return '';\n};","import React, { useState } from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\nimport { validateStartDate, validateEndDate, validateDate } from './validators.js';\n\nconst DateRangeField = ({\n  startDate,\n  setStartDate,\n  endDate,\n  setEndDate,\n  setIsValid\n}) => {\n  const [startDateError, setStartDateError] = useState('');\n  const [endDateError, setEndDateError] = useState('');\n\n  const onStartDateChange = ({\n    value\n  }) => {\n    // First generic validation, then the field specific validation\n    const errorMessage = validateDate(value) || validateStartDate(value, endDate);\n\n    if (errorMessage) {\n      setStartDateError(errorMessage);\n      setIsValid(false);\n    } else {\n      // Clear the error if it's been resolved\n      setStartDateError('');\n    } // Revalidate the end date\n\n\n    const endDateErrorMessage = validateDate(endDate) || validateEndDate(value, endDate);\n\n    if (!errorMessage && !endDateErrorMessage) {\n      // If both fields have become valid update the error and valid states\n      setEndDateError('');\n      setIsValid(true);\n    } // Finally, update the state\n\n\n    setStartDate(value);\n  };\n\n  const onEndDateChange = ({\n    value\n  }) => {\n    // First generic validation, then the field specific validation\n    const errorMessage = validateDate(value) || validateEndDate(startDate, value);\n\n    if (errorMessage) {\n      setEndDateError(errorMessage);\n      setIsValid(false);\n    } else {\n      // Clear the error if it's been resolved\n      setEndDateError('');\n    } // Revalidate the start date\n\n\n    const startDateErrorMessage = validateDate(startDate) || validateStartDate(startDate, value);\n\n    if (!errorMessage && !startDateErrorMessage) {\n      // If both fields have become valid update the error and valid states\n      setStartDateError('');\n      setIsValid(true);\n    } // Finally, update the state\n\n\n    setEndDate(value);\n  };\n\n  return <div>\n            <InputField label={i18n.t('Start Date')} type=\"date\" value={startDate} error={!!startDateError} validationText={startDateError} onChange={onStartDateChange} />\n            <InputField label={i18n.t('End Date')} type=\"date\" value={endDate} error={!!endDateError} validationText={endDateError} onChange={onEndDateChange} />\n        </div>;\n};\n\nDateRangeField.propTypes = {\n  endDate: PropTypes.string.isRequired,\n  setEndDate: PropTypes.func.isRequired,\n  setIsValid: PropTypes.func.isRequired,\n  setStartDate: PropTypes.func.isRequired,\n  startDate: PropTypes.string.isRequired\n};\nexport default DateRangeField;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport intervals from '../../constants/intervals.js';\n\nconst IntervalField = ({\n  interval,\n  setInterval\n}) => <SingleSelectField selected={interval} onChange={({\n  selected\n}) => {\n  setInterval(selected);\n}} label={i18n.t('Interval')}>\n        {intervals.map(({\n    label,\n    value\n  }) => <SingleSelectOption label={label} key={value} value={value} />)}\n    </SingleSelectField>;\n\nIntervalField.propTypes = {\n  interval: PropTypes.string.isRequired,\n  setInterval: PropTypes.func.isRequired\n};\nexport default IntervalField;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport aggregations from '../../constants/aggregations.js';\n\nconst AggregationField = ({\n  aggregation,\n  setAggregation\n}) => <SingleSelectField selected={aggregation} onChange={({\n  selected\n}) => {\n  setAggregation(selected);\n}} label={i18n.t('Aggregation level')}>\n        {aggregations.map(({\n    label,\n    value\n  }) => <SingleSelectOption label={label} key={value} value={value} />)}\n    </SingleSelectField>;\n\nAggregationField.propTypes = {\n  aggregation: PropTypes.string.isRequired,\n  setAggregation: PropTypes.func.isRequired\n};\nexport default AggregationField;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport chartTypes from '../../constants/chartTypes.js';\n\nconst ChartTypeField = ({\n  chartType,\n  setChartType\n}) => <SingleSelectField selected={chartType} onChange={({\n  selected\n}) => {\n  setChartType(selected);\n}} label={i18n.t('Chart type')}>\n        {chartTypes.map(({\n    label,\n    value\n  }) => <SingleSelectOption label={label} key={value} value={value} />)}\n    </SingleSelectField>;\n\nChartTypeField.propTypes = {\n  chartType: PropTypes.string.isRequired,\n  setChartType: PropTypes.func.isRequired\n};\nexport default ChartTypeField;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport eventTypes from '../../constants/eventTypes.js';\n\nconst EventTypeField = ({\n  eventType,\n  setEventType\n}) => <SingleSelectField selected={eventType} onChange={({\n  selected\n}) => {\n  setEventType(selected);\n}} label={i18n.t('Event type')}>\n        {eventTypes.map(({\n    label,\n    value\n  }) => <SingleSelectOption label={label} key={value} value={value} />)}\n    </SingleSelectField>;\n\nEventTypeField.propTypes = {\n  eventType: PropTypes.string.isRequired,\n  setEventType: PropTypes.func.isRequired\n};\nexport default EventTypeField;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport pageSizes from '../../constants/pageSizes.js';\n\nconst PageSizeField = ({\n  pageSize,\n  setPageSize\n}) => <SingleSelectField selected={pageSize} onChange={({\n  selected\n}) => {\n  setPageSize(selected);\n}} label={i18n.t('Page size')}>\n        {pageSizes.map(({\n    label,\n    value\n  }) => <SingleSelectOption label={label} key={value} value={value} />)}\n    </SingleSelectField>;\n\nPageSizeField.propTypes = {\n  pageSize: PropTypes.string.isRequired,\n  setPageSize: PropTypes.func.isRequired\n};\nexport default PageSizeField;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport sortOrders from '../../constants/sortOrders.js';\n\nconst SortOrderField = ({\n  sortOrder,\n  setSortOrder\n}) => <SingleSelectField selected={sortOrder} onChange={({\n  selected\n}) => {\n  setSortOrder(selected);\n}} label={i18n.t('Sort order')}>\n        {sortOrders.map(({\n    label,\n    value\n  }) => <SingleSelectOption label={label} key={value} value={value} />)}\n    </SingleSelectField>;\n\nSortOrderField.propTypes = {\n  setSortOrder: PropTypes.func.isRequired,\n  sortOrder: PropTypes.string.isRequired\n};\nexport default SortOrderField;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { FAVORITE_VIEWS, TOP_FAVORITES } from '../../constants/categories.js';\nimport DateRangeField from './DateRangeField.js';\nimport IntervalField from './IntervalField.js';\nimport AggregationField from './AggregationField.js';\nimport ChartTypeField from './ChartTypeField.js';\nimport EventTypeField from './EventTypeField.js';\nimport PageSizeField from './PageSizeField.js';\nimport SortOrderField from './SortOrderField.js';\n\nconst FilterFields = ({\n  category,\n  startDate,\n  setStartDate,\n  endDate,\n  setEndDate,\n  interval,\n  setInterval,\n  aggregation,\n  setAggregation,\n  chartType,\n  setChartType,\n  eventType,\n  setEventType,\n  pageSize,\n  setPageSize,\n  sortOrder,\n  setSortOrder,\n  setIsValid\n}) => {\n  // Category checks\n  const isTopFavorites = category === TOP_FAVORITES;\n  const isFavoriteViews = category === FAVORITE_VIEWS;\n  return <React.Fragment>\n            {!isTopFavorites && <React.Fragment>\n                    <DateRangeField startDate={startDate} setStartDate={setStartDate} endDate={endDate} setEndDate={setEndDate} setIsValid={setIsValid} />\n                    <IntervalField interval={interval} setInterval={setInterval} />\n                </React.Fragment>}\n            {isFavoriteViews && <React.Fragment>\n                    <AggregationField aggregation={aggregation} setAggregation={setAggregation} />\n                    <ChartTypeField chartType={chartType} setChartType={setChartType} />\n                </React.Fragment>}\n            {isTopFavorites && <React.Fragment>\n                    <EventTypeField eventType={eventType} setEventType={setEventType} />\n                    <PageSizeField pageSize={pageSize} setPageSize={setPageSize} />\n                    <SortOrderField sortOrder={sortOrder} setSortOrder={setSortOrder} />\n                </React.Fragment>}\n        </React.Fragment>;\n};\n\nFilterFields.propTypes = {\n  aggregation: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  chartType: PropTypes.string.isRequired,\n  endDate: PropTypes.string.isRequired,\n  eventType: PropTypes.string.isRequired,\n  interval: PropTypes.string.isRequired,\n  pageSize: PropTypes.string.isRequired,\n  setAggregation: PropTypes.func.isRequired,\n  setChartType: PropTypes.func.isRequired,\n  setEndDate: PropTypes.func.isRequired,\n  setEventType: PropTypes.func.isRequired,\n  setInterval: PropTypes.func.isRequired,\n  setIsValid: PropTypes.func.isRequired,\n  setPageSize: PropTypes.func.isRequired,\n  setSortOrder: PropTypes.func.isRequired,\n  setStartDate: PropTypes.func.isRequired,\n  sortOrder: PropTypes.string.isRequired,\n  startDate: PropTypes.string.isRequired\n};\nexport default FilterFields;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport styles from './LayoutContainer.module.css';\n\nconst LayoutContainer = ({\n  children\n}) => <main className={styles.container}>{children}</main>;\n\nLayoutContainer.propTypes = {\n  children: PropTypes.node\n};\nexport default LayoutContainer;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport styles from './LayoutSidebar.module.css';\n\nconst LayoutSidebar = ({\n  children\n}) => <aside className={styles.sidebar}>{children}</aside>;\n\nLayoutSidebar.propTypes = {\n  children: PropTypes.node\n};\nexport default LayoutSidebar;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport styles from './LayoutContent.module.css';\n\nconst LayoutContent = ({\n  children\n}) => <section className={styles.content}>{children}</section>;\n\nLayoutContent.propTypes = {\n  children: PropTypes.node\n};\nexport default LayoutContent;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport categories from '../../constants/categories.js';\n\nconst CategoryField = ({\n  category,\n  setCategory\n}) => <SingleSelectField selected={category} onChange={({\n  selected\n}) => {\n  setCategory(selected);\n}} label={i18n.t('Category')}>\n        {categories.map(({\n    label,\n    value\n  }) => <SingleSelectOption label={label} key={value} value={value} />)}\n    </SingleSelectField>;\n\nCategoryField.propTypes = {\n  category: PropTypes.string.isRequired,\n  setCategory: PropTypes.func.isRequired\n};\nexport default CategoryField;","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport styles from './AppTitle.module.css';\n\nconst AppTitle = () => <h1 className={styles.title}>{i18n.t('Usage Analytics')}</h1>;\n\nexport default AppTitle;","import React, { useEffect } from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport { CircularLoader, ComponentCover, CenteredContent } from '@dhis2/ui';\nconst query = {\n  favorites: {\n    resource: 'dataStatistics/favorites',\n    params: ({\n      eventType,\n      pageSize,\n      sortOrder\n    }) => ({\n      eventType,\n      pageSize,\n      sortOrder\n    })\n  }\n};\n\nconst TopFavoritesQuery = ({\n  eventType,\n  pageSize,\n  sortOrder,\n  children\n}) => {\n  const {\n    loading,\n    error,\n    data,\n    called,\n    refetch\n  } = useDataQuery(query, {\n    lazy: true,\n    variables: {\n      eventType,\n      pageSize,\n      sortOrder\n    }\n  });\n  useEffect(() => {\n    refetch({\n      eventType,\n      pageSize,\n      sortOrder\n    });\n  }, [eventType, pageSize, sortOrder]);\n\n  if (!called || loading) {\n    return <ComponentCover>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </ComponentCover>;\n  }\n\n  if (error) {\n    throw error;\n  }\n\n  return children(data.favorites);\n};\n\nTopFavoritesQuery.propTypes = {\n  children: PropTypes.func.isRequired,\n  eventType: PropTypes.string.isRequired,\n  pageSize: PropTypes.string.isRequired,\n  sortOrder: PropTypes.string.isRequired\n};\nexport default TopFavoritesQuery;","import React, { useEffect } from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport { CircularLoader, ComponentCover, CenteredContent } from '@dhis2/ui';\nconst query = {\n  dataStatistics: {\n    resource: 'dataStatistics',\n    params: ({\n      startDate,\n      endDate,\n      interval\n    }) => ({\n      startDate,\n      endDate,\n      interval\n    })\n  }\n};\n\nconst DataStatisticsQuery = ({\n  startDate,\n  endDate,\n  interval,\n  isStale,\n  setIsStale,\n  children\n}) => {\n  const onDone = () => setIsStale(false);\n\n  const {\n    loading,\n    error,\n    data,\n    called,\n    refetch\n  } = useDataQuery(query, {\n    lazy: true,\n    variables: {\n      startDate,\n      endDate,\n      interval\n    },\n    onComplete: onDone,\n    onError: onDone\n  });\n  useEffect(() => {\n    refetch({\n      startDate,\n      endDate,\n      interval\n    });\n  }, [startDate, endDate, interval]);\n\n  if (!called || loading || isStale) {\n    return <ComponentCover>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </ComponentCover>;\n  }\n\n  if (error) {\n    throw error;\n  }\n\n  return children(data.dataStatistics);\n};\n\nDataStatisticsQuery.propTypes = {\n  children: PropTypes.func.isRequired,\n  endDate: PropTypes.string.isRequired,\n  interval: PropTypes.string.isRequired,\n  isStale: PropTypes.bool.isRequired,\n  setIsStale: PropTypes.func.isRequired,\n  startDate: PropTypes.string.isRequired\n};\nexport default DataStatisticsQuery;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { TopFavoritesQuery } from '../Queries';\n\nconst TopFavoritesVisualization = ({\n  eventType,\n  pageSize,\n  sortOrder\n}) => <TopFavoritesQuery eventType={eventType} pageSize={pageSize} sortOrder={sortOrder}>\n        {() => null}\n    </TopFavoritesQuery>;\n\nTopFavoritesVisualization.propTypes = {\n  eventType: PropTypes.string,\n  pageSize: PropTypes.string,\n  sortOrder: PropTypes.string\n};\nexport default TopFavoritesVisualization;","import i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport { YEAR, MONTH, WEEK, DAY } from '../constants/intervals.js';\n/**\n * This selector receives 1-indexed months. But moment expects 0-indexed months,\n * so we subtract 1 whenever a month is provided to moment\n */\n\nexport const getIntervalDate = ({\n  year,\n  month,\n  week,\n  day\n}, interval) => {\n  switch (interval) {\n    case YEAR:\n      {\n        return moment({\n          year\n        }).format('YYYY');\n      }\n\n    case MONTH:\n      {\n        const zeroIndexedMonth = month - 1;\n        const format = 'MMM YYYY';\n        return moment({\n          year,\n          month: zeroIndexedMonth\n        }).format(format);\n      }\n\n    case WEEK:\n      {\n        const format = `[${i18n.t('Week')}] [${week}] / YYYY`;\n        return moment({\n          year\n        }).format(format);\n      }\n\n    case DAY:\n      {\n        const zeroIndexedMonth = month - 1;\n        const format = 'MMM D, YYYY';\n        return moment({\n          year,\n          month: zeroIndexedMonth,\n          day\n        }).format(format);\n      }\n  }\n};","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { Card } from '@dhis2/ui';\n/**\n * The div wrapping the Card is used to constrain the 100% height of the Card.\n */\n\nconst TableWrapper = ({\n  children\n}) => <div>\n        <Card>{children}</Card>\n    </div>;\n\nTableWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default TableWrapper;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableHead, TableRowHead, TableRow, TableCell, TableCellHead, TableBody } from '@dhis2/ui';\nimport { getIntervalDate } from '../../selectors/date.js';\nimport TableWrapper from './TableWrapper.js';\n\nconst DataValuesTable = ({\n  data,\n  interval\n}) => <TableWrapper>\n        <Table>\n            <TableHead>\n                <TableRowHead>\n                    <TableCellHead>{i18n.t('Date')}</TableCellHead>\n                    <TableCellHead>{i18n.t('Data Values')}</TableCellHead>\n                </TableRowHead>\n            </TableHead>\n            <TableBody>\n                {data.map(({\n        year,\n        month,\n        week,\n        day,\n        savedDataValues\n      }) => {\n        const intervalDate = getIntervalDate({\n          year,\n          month,\n          week,\n          day\n        }, interval);\n        return <TableRow key={intervalDate}>\n                            <TableCell>{intervalDate}</TableCell>\n                            <TableCell>{savedDataValues}</TableCell>\n                        </TableRow>;\n      })}\n            </TableBody>\n        </Table>\n    </TableWrapper>;\n\nDataValuesTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  interval: PropTypes.string.isRequired\n};\nexport default DataValuesTable;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableHead, TableRowHead, TableRow, TableCell, TableCellHead, TableBody } from '@dhis2/ui';\nimport { getIntervalDate } from '../../selectors/date.js';\nimport TableWrapper from './TableWrapper.js';\n\nconst UsersTable = ({\n  data,\n  interval\n}) => <TableWrapper>\n        <Table>\n            <TableHead>\n                <TableRowHead>\n                    <TableCellHead>{i18n.t('Date')}</TableCellHead>\n                    <TableCellHead>{i18n.t('Active Users')}</TableCellHead>\n                    <TableCellHead>{i18n.t('Total Users')}</TableCellHead>\n                </TableRowHead>\n            </TableHead>\n            <TableBody>\n                {data.map(({\n        year,\n        month,\n        week,\n        day,\n        activeUsers,\n        users\n      }) => {\n        const intervalDate = getIntervalDate({\n          year,\n          month,\n          week,\n          day\n        }, interval);\n        return <TableRow key={intervalDate}>\n                            <TableCell>{intervalDate}</TableCell>\n                            <TableCell>{activeUsers}</TableCell>\n                            <TableCell>{users}</TableCell>\n                        </TableRow>;\n      })}\n            </TableBody>\n        </Table>\n    </TableWrapper>;\n\nUsersTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  interval: PropTypes.string.isRequired\n};\nexport default UsersTable;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport styles from './ChartHeader.module.css';\n\nconst ChartHeader = ({\n  title,\n  subtitle\n}) => <header>\n        <h4 className={styles.title}>{title}</h4>\n        <h6 className={styles.subtitle}>{subtitle}</h6>\n    </header>;\n\nChartHeader.propTypes = {\n  subtitle: PropTypes.string,\n  title: PropTypes.string\n};\nexport default ChartHeader;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { Card } from '@dhis2/ui';\nimport ChartHeader from './ChartHeader.js';\nimport styles from './ChartWrapper.module.css';\n/**\n * This wrapper expects a react-chartjs-2 <Line> component as child.\n */\n\nconst ChartWrapper = ({\n  children,\n  title,\n  subtitle\n}) => <div className={styles.outerContainer}>\n        <Card>\n            <div className={styles.innerContainer}>\n                <ChartHeader title={title} subtitle={subtitle} />\n                <div className={styles.chartContainer}>{children}</div>\n            </div>\n        </Card>\n    </div>;\n\nChartWrapper.propTypes = {\n  children: PropTypes.node,\n  subtitle: PropTypes.string,\n  title: PropTypes.string\n};\nexport default ChartWrapper;","import i18n from '@dhis2/d2-i18n';\nimport CATEGORIES from '../../constants/categories';\nimport { getIntervalDate } from '../../selectors/date.js';\nexport const getTitles = selected => {\n  const selectedCategory = CATEGORIES.find(category => category.value === selected);\n  return {\n    title: selectedCategory.label,\n    subtitle: selectedCategory.subtitle\n  };\n};\nexport const getLabels = (data, interval) => data.map(({\n  year,\n  month,\n  week,\n  day\n}) => getIntervalDate({\n  year,\n  month,\n  week,\n  day\n}, interval));\nexport const getDataValuesDatasets = data => [{\n  label: i18n.t('Data Values'),\n  data: data.map(d => d.savedDataValues),\n  borderColor: '#7cb5ec'\n}];\nexport const getUsersDatasets = data => [{\n  label: i18n.t('Active Users'),\n  data: data.map(d => d.activeUsers),\n  borderColor: '#7cb5ec'\n}, {\n  label: i18n.t('Total Users'),\n  data: data.map(d => d.users),\n  borderColor: '#cc6600'\n}];","import i18n from '@dhis2/d2-i18n';\n/**\n * These are the options we want to apply to each Line graph.\n * For documentation on the options see:\n *\n * - https://github.com/reactchartjs/react-chartjs-2\n * - https://www.chartjs.org/docs/latest/\n *\n */\n\nconst options = {\n  animation: {\n    duration: 180\n  },\n  legend: {\n    position: 'bottom'\n  },\n  maintainAspectRatio: false,\n  elements: {\n    line: {\n      tension: 0,\n      fill: false,\n      backgroundColor: 'rgba(0, 0, 0, 0)'\n    }\n  },\n  scales: {\n    yAxes: [{\n      scaleLabel: {\n        display: true,\n        labelString: i18n.t('Values')\n      }\n    }]\n  }\n};\nexport default options;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { Line } from 'react-chartjs-2';\nimport ChartWrapper from './ChartWrapper.js';\nimport { getTitles, getLabels, getUsersDatasets } from './selectors.js';\nimport options from './options.js';\n\nconst UsersChart = ({\n  data,\n  category,\n  interval\n}) => {\n  const {\n    title,\n    subtitle\n  } = getTitles(category);\n  const labels = getLabels(data, interval);\n  const datasets = getUsersDatasets(data);\n  return <ChartWrapper title={title} subtitle={subtitle}>\n            <Line data={{\n      labels,\n      datasets\n    }} options={options} />\n        </ChartWrapper>;\n};\n\nUsersChart.propTypes = {\n  category: PropTypes.string,\n  data: PropTypes.array,\n  interval: PropTypes.string\n};\nexport default UsersChart;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { Line } from 'react-chartjs-2';\nimport ChartWrapper from './ChartWrapper.js';\nimport { getTitles, getLabels, getDataValuesDatasets } from './selectors.js';\nimport options from './options.js';\n\nconst DataValuesChart = ({\n  data,\n  category,\n  interval\n}) => {\n  const {\n    title,\n    subtitle\n  } = getTitles(category);\n  const labels = getLabels(data, interval);\n  const datasets = getDataValuesDatasets(data);\n  return <ChartWrapper title={title} subtitle={subtitle}>\n            <Line data={{\n      labels,\n      datasets\n    }} options={options} />\n        </ChartWrapper>;\n};\n\nDataValuesChart.propTypes = {\n  category: PropTypes.string,\n  data: PropTypes.array,\n  interval: PropTypes.string\n};\nexport default DataValuesChart;","import React, { Fragment } from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { DATA_VALUES, USERS } from '../../constants/categories.js';\nimport { DataValuesTable, UsersTable } from '../Tables';\nimport { DataValuesChart, UsersChart } from '../Charts';\nimport { DataStatisticsQuery } from '../Queries';\n\nconst DataStatisticsVisualization = ({\n  category,\n  endDate,\n  interval,\n  setIsStale,\n  isStale,\n  startDate\n}) => <DataStatisticsQuery startDate={startDate} endDate={endDate} interval={interval} setIsStale={setIsStale} isStale={isStale}>\n        {data => {\n    switch (category) {\n      case DATA_VALUES:\n        return <Fragment>\n                            <DataValuesChart data={data} interval={interval} category={category} />\n                            <DataValuesTable data={data} interval={interval} />\n                        </Fragment>;\n\n      case USERS:\n        return <Fragment>\n                            <UsersChart data={data} interval={interval} category={category} />\n                            <UsersTable data={data} interval={interval} />\n                        </Fragment>;\n\n      default:\n        return null;\n    }\n  }}\n    </DataStatisticsQuery>;\n\nDataStatisticsVisualization.propTypes = {\n  isStale: PropTypes.bool.isRequired,\n  setIsStale: PropTypes.func.isRequired,\n  category: PropTypes.string,\n  endDate: PropTypes.string,\n  interval: PropTypes.string,\n  startDate: PropTypes.string\n};\nexport default DataStatisticsVisualization;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { CircularLoader, ComponentCover, CenteredContent } from '@dhis2/ui';\nimport TopFavoritesVisualization from './TopFavoritesVisualization.js';\nimport DataStatisticsVisualization from './DataStatisticsVisualization.js';\n\nconst Visualization = ({\n  category,\n  endDate,\n  eventType,\n  interval,\n  isTopFavorites,\n  pageSize,\n  setIsStale,\n  sortOrder,\n  isStale,\n  startDate,\n  isValid\n}) => {\n  if (!isValid) {\n    return <ComponentCover>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </ComponentCover>;\n  }\n\n  if (isTopFavorites) {\n    return <TopFavoritesVisualization eventType={eventType} pageSize={pageSize} sortOrder={sortOrder} />;\n  }\n\n  return <DataStatisticsVisualization category={category} startDate={startDate} endDate={endDate} interval={interval} setIsStale={setIsStale} isStale={isStale} />;\n};\n\nVisualization.propTypes = {\n  isStale: PropTypes.bool.isRequired,\n  isTopFavorites: PropTypes.bool.isRequired,\n  isValid: PropTypes.bool.isRequired,\n  setIsStale: PropTypes.func.isRequired,\n  category: PropTypes.string,\n  endDate: PropTypes.string,\n  eventType: PropTypes.string,\n  interval: PropTypes.string,\n  pageSize: PropTypes.string,\n  sortOrder: PropTypes.string,\n  startDate: PropTypes.string\n};\nexport default Visualization;","import moment from 'moment';\n/**\n * This creates the default start and end dates for the app state. The format\n * is YYYY-MM-DD because that's what a date input expects, and that's what these\n * dates will be used for.\n * The default is to have the end date be now, and the start date 4 months before\n * that.\n */\n\nconst createDefaultDates = () => {\n  const format = 'YYYY-MM-DD';\n  const initialStartDate = moment().subtract(4, 'months').format(format);\n  const initialEndDate = moment().format(format);\n  return {\n    initialStartDate,\n    initialEndDate\n  };\n};\n\nexport default createDefaultDates;","import React, { useState } from 'react';\nimport { FAVORITE_VIEWS, TOP_FAVORITES } from '../../constants/categories.js';\nimport { WEEK } from '../../constants/intervals.js';\nimport { SUM } from '../../constants/aggregations.js';\nimport { ALL } from '../../constants/chartTypes.js';\nimport { CHART_VIEW } from '../../constants/eventTypes.js';\nimport { PS_25 } from '../../constants/pageSizes.js';\nimport { ASC } from '../../constants/sortOrders.js';\nimport FilterFields from '../FilterFields';\nimport { LayoutContainer, LayoutSidebar, LayoutContent } from '../Layout';\nimport CategoryField from '../CategoryField';\nimport AppTitle from '../AppTitle';\nimport Visualization from '../Visualization';\nimport './App.css';\nimport createDefaultDates from './createDefaultDates.js';\n\nconst App = () => {\n  const {\n    initialStartDate,\n    initialEndDate\n  } = createDefaultDates(); // State\n\n  const [category, setCategory] = useState(FAVORITE_VIEWS);\n  const [startDate, setStartDate] = useState(initialStartDate);\n  const [endDate, setEndDate] = useState(initialEndDate);\n  const [interval, setInterval] = useState(WEEK);\n  const [aggregation, setAggregation] = useState(SUM);\n  const [chartType, setChartType] = useState(ALL);\n  const [eventType, setEventType] = useState(CHART_VIEW);\n  const [pageSize, setPageSize] = useState(PS_25);\n  const [sortOrder, setSortOrder] = useState(ASC);\n  /**\n   * The rendering of the different intervals in the DataValuesTable\n   * depends on the props and the data being in sync. To prevent stale\n   * props from being used we're tracking the stale status of interval.\n   */\n\n  const [isStale, setIsStale] = useState(false);\n\n  const setIsStaleAndInterval = interval => {\n    setIsStale(true);\n    setInterval(interval);\n  };\n  /**\n   * Used to block fetching and visualization rendering if validation has failed.\n   */\n\n\n  const [isValid, setIsValid] = useState(true);\n  const isTopFavorites = category === TOP_FAVORITES;\n  return <LayoutContainer>\n            <LayoutSidebar>\n                <AppTitle />\n                <CategoryField category={category} setCategory={setCategory} />\n                <FilterFields aggregation={aggregation} category={category} chartType={chartType} endDate={endDate} eventType={eventType} interval={interval} pageSize={pageSize} setAggregation={setAggregation} setChartType={setChartType} setEndDate={setEndDate} setEventType={setEventType} setInterval={setIsStaleAndInterval} setPageSize={setPageSize} setSortOrder={setSortOrder} setStartDate={setStartDate} sortOrder={sortOrder} startDate={startDate} setIsValid={setIsValid} />\n            </LayoutSidebar>\n            <LayoutContent>\n                <Visualization category={category} endDate={endDate} eventType={eventType} interval={interval} isTopFavorites={isTopFavorites} pageSize={pageSize} setIsStale={setIsStale} sortOrder={sortOrder} isStale={isStale} startDate={startDate} isValid={isValid} />\n            </LayoutContent>\n        </LayoutContainer>;\n};\n\nexport default App;","export { default } from './App';"],"sourceRoot":""}