{"version":3,"sources":["D2App/constants/statuses.js","D2App/actions/types.js","D2App/constants/categories.js","D2App/constants/intervals.js","D2App/constants/aggregations.js","D2App/constants/chartTypes.js","D2App/constants/eventTypes.js","D2App/constants/sortOrders.js","D2App/reducers/filter.js","D2App/store.js","D2App/reducers/appStatus.js","D2App/reducers/usageData.js","D2App/api/get.js","D2App/api/index.js","D2App/actions/index.js","D2App/components/Error.js","D2App/constants/pageSizes.js","D2App/components/FilterFields/dropDownComponents.js","D2App/components/FilterFields/DateRange.js","D2App/components/FilterFields/index.js","D2App/components/FilterSideBar.js","D2App/constants/properties.js","D2App/constants/fields.js","D2App/utils/date.js","D2App/components/Chart/config.js","D2App/components/Chart/parseChartData.js","D2App/components/Chart/index.js","D2App/components/Table.js","D2App/components/UsageAnalytics.js","D2App/components/App.js"],"names":["LOADING","ERROR","APP_LOAD_SUCCESS","APP_LOAD_ERROR","USAGE_DATA_REQUESTED","USAGE_DATA_RECEIVED","USAGE_DATA_ERRORED","FILTER_UPDATED","FAVORITE_VIEWS","FAVORITES_SAVED","USERS","TOP_FAVORITES","DATA_VALUES","CATEGORIES","value","label","i18n","t","subtitle","WEEK","MONTH","YEAR","INTERVALS","SUM","AVERAGE","AGGREGATIONS","ALL","TOTAL","CHART_TYPES","CHART_VIEW","EVENT_TYPES","ASC","SORT_ORDERS","parseDate","date","year","getFullYear","month","getMonth","day","getDate","length","join","middlewares","ReduxThunk","rootReducer","combineReducers","appStatus","state","type","usageData","payload","filter","endDate","startDate","Date","valueOf","setMonth","category","interval","aggregationLevel","chartType","eventType","pageSize","sortOrder","getInitialState","key","createStore","applyMiddleware","defaultConfig","method","credentials","getJSON","baseUrl","path","config","fetch","then","response","ok","Error","statusText","Promise","reject","get","json","data","status","message","api","getFavorites","queryParams","now","getDataStatistics","setBaseUrl","url","getUsageData","updateCategory","dispatch","getState","oldCategory","updateFilter","newCategory","isNewDataRequiredAfterCategoryChange","updateFilterAndGetData","name","createAction","ACTIONS","async","error","className","PAGE_SIZES","DropDown","options","rest","selected","map","START_DATE","END_DATE","ERROR_PATTERN","ERROR_MISSING_DATE","ERROR_END_BEFORE_START","ERROR_START_AFTER_END","DateRange","Component","constructor","props","super","this","startDateError","endDateError","onStartDateChange","bind","onEndDateChange","updateUsageData","debounce","onChange","dateRange","errorKey","otherErrorKey","getError","otherError","setState","test","render","validationText","dataTest","CategoryDropDown","connect","createValueGetterForFilterKey","DateRangeComponent","IntervalDropDown","createFilterUpdater","AggregationLevelDropDown","ChartTypeDropDown","EventTypeDropDown","PageSizeDropDown","SortOrderDropDown","updaterFn","filterKey","showDateFields","showTopFavoritesFields","showFavoriteViewsFields","mapViews","chartViews","pivotTableViews","eventReportViews","eventChartViews","dashboardViews","dataSetReportViews","totalViews","averageMapViews","averageChartViews","averagePivotTableViews","averageEventReportViews","averageEventChartViews","averageDashboardViews","averageViews","savedMaps","savedCharts","savedPivotTables","savedEventReports","savedEventCharts","savedDashboards","savedIndicators","activeUsers","users","position","views","id","created","savedDataValues","FAVORITE_VIEWS_SUM_FIELDS","PROPS","FAVORITE_VIEWS_AVG_FIELDS","FAVORITES_SAVED_FIELDS","USERS_FIELDS","TABLE_FIELDS","CATS","AGGREG","CHART_FIELDS","CHARTS","dateFormats","yyyymmdd","yyyymm","weekStr","getDisplayDateForInterval","week","getDisplayDateFromYearMonthDay","getDisplayDate","dateFormatOptions","locale","store","Intl","DateTimeFormat","format","colors","animation","duration","legend","responsive","maintainAspectRatio","tooltips","mode","scales","xAxes","display","scaleLabel","ticks","maxRotation","minRotation","yAxes","labelString","suggestedMin","precision","dataSet","backgroundColor","fill","lineTension","parseChartData","dataPoints","labels","datasets","selectedCategory","find","c","max","min","fields","FIELDS","dataPointsLen","fieldsLen","dataPointIndex","dataPoint","push","fieldIndex","field","borderColor","pointValue","suggestedMax","onResize","onChartResize","title","chart","resize","baseClassName","shouldHide","loading","chartConfig","content","overlay","TableHead","headers","header","i","TableBody","rows","row","TableRow","cells","text","parseTableData","dateField","createdField","isoString","tableData","UsageAnalytics","componentDidMount","initApp","translucent","large","App","useConfig"],"mappings":"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","file":"static/js/app.6cf85997.chunk.js","sourcesContent":["export const LOADING = 'LOADING';\nexport const READY = 'READY';\nexport const ERROR = 'ERROR';","// INITIALIZATION\nexport const APP_LOAD_SUCCESS = 'APP_LOAD_SUCCESS';\nexport const APP_LOAD_ERROR = 'APP_LOAD_ERROR'; // STATISTICS\n\nexport const USAGE_DATA_REQUESTED = 'USAGE_DATA_REQUESTED';\nexport const USAGE_DATA_RECEIVED = 'USAGE_DATA_RECEIVED';\nexport const USAGE_DATA_ERRORED = 'USAGE_DATA_ERRORED'; // FILTER\n\nexport const FILTER_UPDATED = 'FILTER_UPDATED';","import i18n from '@dhis2/d2-i18n';\nexport const FAVORITE_VIEWS = 'FAVORITE_VIEWS';\nexport const FAVORITES_SAVED = 'FAVORITES_SAVED';\nexport const USERS = 'USERS';\nexport const TOP_FAVORITES = 'TOP_FAVORITES';\nexport const DATA_VALUES = 'DATA_VALUES';\nconst CATEGORIES = [{\n  value: FAVORITE_VIEWS,\n  label: i18n.t('Favorite views'),\n  subtitle: i18n.t('Number of times users looked at analysis favorites')\n}, {\n  value: FAVORITES_SAVED,\n  label: i18n.t('Favorites saved'),\n  subtitle: i18n.t('Number of analysis favorites created by users')\n}, {\n  value: USERS,\n  label: i18n.t('Users'),\n  subtitle: i18n.t('Number of users in the system')\n}, {\n  value: TOP_FAVORITES,\n  label: i18n.t('Top favorites')\n}, {\n  value: DATA_VALUES,\n  label: i18n.t('Data values'),\n  subtitle: i18n.t('Number of data values saved in the system')\n}];\nexport default CATEGORIES;","import i18n from '@dhis2/d2-i18n';\nexport const DAY = 'DAY';\nexport const WEEK = 'WEEK';\nexport const MONTH = 'MONTH';\nexport const YEAR = 'YEAR';\nconst INTERVALS = [{\n  value: DAY,\n  label: i18n.t('Day')\n}, {\n  value: WEEK,\n  label: i18n.t('Week')\n}, {\n  value: MONTH,\n  label: i18n.t('Month')\n}, {\n  value: YEAR,\n  label: i18n.t('Year')\n}];\nexport default INTERVALS;","import i18n from '@dhis2/d2-i18n';\nexport const SUM = 'SUM';\nexport const AVERAGE = 'AVERAGE';\nconst AGGREGATIONS = [{\n  value: SUM,\n  label: i18n.t('Sum')\n}, {\n  value: AVERAGE,\n  label: i18n.t('Average')\n}];\nexport default AGGREGATIONS;","import i18n from '@dhis2/d2-i18n';\nexport const ALL = 'ALL';\nexport const TOTAL = 'TOTAL';\nconst CHART_TYPES = [{\n  value: ALL,\n  label: i18n.t('All')\n}, {\n  value: TOTAL,\n  label: i18n.t('Total')\n}];\nexport default CHART_TYPES;","import i18n from '@dhis2/d2-i18n';\nexport const CHART_VIEW = 'CHART_VIEW';\nexport const MAP_VIEW = 'MAP_VIEW';\nexport const REPORT_TABLE_VIEW = 'REPORT_TABLE_VIEW';\nexport const EVENT_REPORT_VIEW = 'EVENT_REPORT_VIEW';\nexport const EVENT_CHART_VIEW = 'EVENT_CHART_VIEW';\nexport const DASHBOARD_VIEW = 'DASHBOARD_VIEW';\nexport const DATA_SET_REPORT_VIEW = 'DATA_SET_REPORT_VIEW';\nconst EVENT_TYPES = [{\n  value: CHART_VIEW,\n  label: i18n.t('Chart')\n}, {\n  value: MAP_VIEW,\n  label: i18n.t('Map')\n}, {\n  value: REPORT_TABLE_VIEW,\n  label: i18n.t('Report table')\n}, {\n  value: EVENT_REPORT_VIEW,\n  label: i18n.t('Event report')\n}, {\n  value: EVENT_CHART_VIEW,\n  label: i18n.t('Event chart')\n}, {\n  value: DASHBOARD_VIEW,\n  label: i18n.t('Dashboard')\n}, {\n  value: DATA_SET_REPORT_VIEW,\n  label: i18n.t('Data set report')\n}];\nexport default EVENT_TYPES;","import i18n from '@dhis2/d2-i18n';\nexport const ASC = 'ASC';\nexport const DESC = 'DESC';\nconst SORT_ORDERS = [{\n  value: ASC,\n  label: i18n.t('Ascending')\n}, {\n  value: DESC,\n  label: i18n.t('Descending')\n}];\nexport default SORT_ORDERS;","import { FILTER_UPDATED } from '../actions/types';\nimport { FAVORITE_VIEWS } from '../constants/categories';\nimport { WEEK } from '../constants/intervals';\nimport { SUM } from '../constants/aggregations';\nimport { ALL } from '../constants/chartTypes';\nimport { CHART_VIEW } from '../constants/eventTypes';\nimport { ASC } from '../constants/sortOrders';\nexport default function filter(state = getInitialState(new Date()), {\n  type,\n  payload\n}) {\n  switch (type) {\n    case FILTER_UPDATED:\n      return { ...state,\n        [payload.key]: payload.value\n      };\n\n    default:\n      return state;\n  }\n}\nexport function getInitialState(endDate) {\n  const startDate = new Date(endDate.valueOf());\n  startDate.setMonth(startDate.getMonth() - 4);\n  return {\n    category: FAVORITE_VIEWS,\n    startDate: parseDate(startDate),\n    endDate: parseDate(endDate),\n    interval: WEEK,\n    aggregationLevel: SUM,\n    chartType: ALL,\n    eventType: CHART_VIEW,\n    pageSize: '25',\n    sortOrder: ASC\n  };\n}\nexport function parseDate(date) {\n  const year = date.getFullYear();\n  let month = '' + (date.getMonth() + 1);\n  let day = '' + date.getDate();\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n  return [year, month, day].join('-');\n}","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport appStatus from './reducers/appStatus';\nimport usageData from './reducers/usageData';\nimport filter from './reducers/filter';\nconst middlewares = [ReduxThunk];\nconst shouldLog = false;\n\nif (process.env.NODE_ENV === 'development' && shouldLog) {\n  middlewares.push(logger);\n}\n\nconst rootReducer = combineReducers({\n  appStatus,\n  usageData,\n  filter\n});\nexport default createStore(rootReducer, applyMiddleware(...middlewares));","import { LOADING, READY, ERROR } from '../constants/statuses';\nimport { APP_LOAD_SUCCESS, APP_LOAD_ERROR } from '../actions/types';\nexport default function appStatus(state = LOADING, {\n  type\n}) {\n  switch (type) {\n    case APP_LOAD_SUCCESS:\n      return READY;\n\n    case APP_LOAD_ERROR:\n      return ERROR;\n\n    default:\n      return state;\n  }\n}","import { LOADING, ERROR } from '../constants/statuses';\nimport { APP_LOAD_SUCCESS, USAGE_DATA_REQUESTED, USAGE_DATA_RECEIVED, USAGE_DATA_ERRORED } from '../actions/types';\nexport default function usageData(state = LOADING, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case USAGE_DATA_REQUESTED:\n      return LOADING;\n\n    case APP_LOAD_SUCCESS:\n      return payload;\n\n    case USAGE_DATA_RECEIVED:\n      return payload;\n\n    case USAGE_DATA_ERRORED:\n      return ERROR;\n\n    default:\n      return state;\n  }\n}","const defaultConfig = {\n  method: 'GET',\n  credentials: 'include'\n};\nexport function get(baseUrl, path, config = defaultConfig) {\n  if (!baseUrl) {\n    return Promise.reject(new Error('A baseUrl must be passed'));\n  }\n\n  if (!path) {\n    return Promise.reject(new Error('A path must be passed'));\n  }\n\n  return fetch(`${baseUrl}/api/${path}`, config).then(response => {\n    if (response.ok) {\n      return response;\n    }\n\n    throw new Error(response.statusText);\n  });\n}\nexport function getJSON(baseUrl, path) {\n  return get(baseUrl, path).then(response => response.json()).then(data => {\n    if (data.status === 'ERROR') {\n      throw new Error(data.message);\n    } else {\n      return data;\n    }\n  });\n}","import { TOP_FAVORITES } from '../constants/categories';\nimport { getJSON } from './get';\n\nconst api = (() => {\n  let baseUrl = null;\n\n  const setBaseUrl = url => {\n    baseUrl = url;\n  };\n\n  const getFavorites = ({\n    eventType,\n    pageSize,\n    sortOrder\n  }) => {\n    const queryParams = `eventType=${eventType}&pageSize=${pageSize}&sortOrder=${sortOrder}&_=${Date.now()}`;\n    return getJSON(baseUrl, `dataStatistics/favorites?${queryParams}`);\n  };\n\n  const getDataStatistics = ({\n    startDate,\n    endDate,\n    interval\n  }) => {\n    const queryParams = `startDate=${startDate}&endDate=${endDate}&interval=${interval}&_=${Date.now()}`;\n    return getJSON(baseUrl, `dataStatistics?${queryParams}`);\n  };\n\n  const getUsageData = filter => {\n    return filter.category === TOP_FAVORITES ? getFavorites({\n      eventType: filter.eventType,\n      pageSize: filter.pageSize,\n      sortOrder: filter.sortOrder\n    }) : getDataStatistics({\n      startDate: filter.startDate,\n      endDate: filter.endDate,\n      interval: filter.interval\n    });\n  };\n\n  return {\n    setBaseUrl,\n    getFavorites,\n    getDataStatistics,\n    getUsageData\n  };\n})();\n\nexport default api;","import api from '../api';\nimport * as ACTIONS from '../actions/types';\nimport { TOP_FAVORITES } from '../constants/categories';\nexport const initApp = () => async (dispatch, getState) => {\n  try {\n    const payload = await api.getUsageData(getState().filter);\n    dispatch(createAction(ACTIONS.APP_LOAD_SUCCESS, payload));\n  } catch (error) {\n    dispatch(createAction(ACTIONS.APP_LOAD_ERROR, error));\n  }\n}; // Fetch data if category has changed from TOP_FAVORITES to anything else\n// or vice versa\n\nexport const updateCategory = value => (dispatch, getState) => {\n  const {\n    filter\n  } = getState();\n  const oldCategory = filter.category;\n  dispatch(updateFilter('category', value));\n\n  if (isNewDataRequiredAfterCategoryChange(oldCategory, value)) {\n    return getUsageData({ ...filter,\n      category: value\n    }, dispatch);\n  }\n};\nexport const updateFilterAndGetData = (name, value) => (dispatch, getState) => {\n  dispatch(updateFilter(name, value));\n  const {\n    filter\n  } = getState();\n  return getUsageData(filter, dispatch);\n};\nexport const updateUsageData = () => (dispatch, getState) => {\n  const {\n    filter\n  } = getState();\n  return getUsageData(filter, dispatch);\n};\nexport const updateFilter = (key, value) => createAction(ACTIONS.FILTER_UPDATED, {\n  key,\n  value\n});\nexport function isNewDataRequiredAfterCategoryChange(oldCategory, newCategory) {\n  return oldCategory !== newCategory && (newCategory === TOP_FAVORITES && oldCategory !== TOP_FAVORITES || oldCategory === TOP_FAVORITES && newCategory !== TOP_FAVORITES);\n}\n\nasync function getUsageData(filter, dispatch) {\n  dispatch(createAction(ACTIONS.USAGE_DATA_REQUESTED));\n\n  try {\n    const usageData = await api.getUsageData(filter);\n    dispatch(createAction(ACTIONS.USAGE_DATA_RECEIVED, usageData));\n  } catch (error) {\n    dispatch(createAction(ACTIONS.USAGE_DATA_ERRORED, error));\n  }\n}\n\nfunction createAction(type, payload) {\n  return {\n    type,\n    payload\n  };\n}","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport './Error.css';\n\nfunction Error({\n  message\n}) {\n  return <div className=\"uaa-error\">{message}</div>;\n}\n\nError.propTypes = {\n  message: PropTypes.string\n};\nexport default Error;","export const PS_5 = '5';\nexport const PS_10 = '10';\nexport const PS_15 = '15';\nexport const PS_20 = '20';\nexport const PS_25 = '25';\nconst PAGE_SIZES = [{\n  value: PS_5,\n  label: '5'\n}, {\n  value: PS_10,\n  label: '10'\n}, {\n  value: PS_15,\n  label: '15'\n}, {\n  value: PS_20,\n  label: '20'\n}, {\n  value: PS_25,\n  label: '25'\n}];\nexport default PAGE_SIZES;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport CATEGORIES from '../../constants/categories';\nimport INTERVALS from '../../constants/intervals';\nimport AGGREGATIONS from '../../constants/aggregations';\nimport CHART_TYPES from '../../constants/chartTypes';\nimport EVENT_TYPES from '../../constants/eventTypes';\nimport PAGE_SIZES from '../../constants/pageSizes';\nimport SORT_ORDERS from '../../constants/sortOrders';\nexport const DropDown = ({\n  options,\n  value,\n  ...rest\n}) => <SingleSelectField {...rest} selected={value}>\n        {options.map(({\n    label,\n    value\n  }) => <SingleSelectOption label={label} key={value} value={value} />)}\n    </SingleSelectField>;\nDropDown.propTypes = {\n  options: PropTypes.array.isRequired,\n  value: PropTypes.string.isRequired\n};\nexport const Category = props => <DropDown {...props} label={i18n.t('Category')} options={CATEGORIES} />;\nexport const Interval = props => <DropDown {...props} label={i18n.t('Interval')} options={INTERVALS} />;\nexport const AggregationLevel = props => <DropDown {...props} label={i18n.t('Aggregation Level')} options={AGGREGATIONS} />;\nexport const ChartType = props => <DropDown {...props} label={i18n.t('Chart Type')} options={CHART_TYPES} />;\nexport const EventType = props => <DropDown {...props} label={i18n.t('Event Type')} options={EVENT_TYPES} />;\nexport const PageSize = props => <DropDown {...props} label={i18n.t('Page Size')} options={PAGE_SIZES} />;\nexport const SortOrder = props => <DropDown {...props} label={i18n.t('Sort Order')} options={SORT_ORDERS} />;","import React, { Component } from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\nimport debounce from 'lodash.debounce';\nimport './DateRange.css';\nexport const START_DATE = 'startDate';\nexport const END_DATE = 'endDate';\nexport const ERROR_PATTERN = i18n.t('Please use the format yyyy-mm-dd');\nexport const ERROR_MISSING_DATE = i18n.t('Please fill in both dates');\nexport const ERROR_END_BEFORE_START = i18n.t('End date is before start date');\nexport const ERROR_START_AFTER_END = i18n.t('Start date is after end date'); // Very basic date input. If browser doesn't support input type date,\n// it will use the pattern validation to display an error\n\nclass DateRange extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startDateError: null,\n      endDateError: null\n    };\n    this.onStartDateChange = this.onStartDateChange.bind(this);\n    this.onEndDateChange = this.onEndDateChange.bind(this);\n    this.updateUsageData = debounce(props.updateUsageData, 250);\n  }\n\n  onStartDateChange({\n    value\n  }) {\n    this.onChange(START_DATE, value);\n  }\n\n  onEndDateChange({\n    value\n  }) {\n    this.onChange(END_DATE, value);\n  }\n\n  onChange(key, value) {\n    const {\n      updateFilter,\n      ...dateRange\n    } = this.props;\n    const errorKey = `${key}Error`;\n    const otherErrorKey = key === START_DATE ? `${END_DATE}Error` : `${START_DATE}Error`;\n    const error = this.getError({ ...dateRange,\n      [key]: value\n    }, key);\n    const otherError = this.state[otherErrorKey] === ERROR_PATTERN ? ERROR_PATTERN : null;\n\n    if (this.state[errorKey] !== error) {\n      this.setState({\n        [errorKey]: error,\n        [otherErrorKey]: otherError\n      });\n    }\n\n    updateFilter(key, value);\n\n    if (!error) {\n      this.updateUsageData();\n    }\n  }\n\n  getError(dateRange, key) {\n    if (!/[0-9]{4}-[0-9]{2}-[0-9]{2}/.test(dateRange[key])) {\n      return ERROR_PATTERN;\n    }\n\n    if (!dateRange.startDate || !dateRange.endDate) {\n      return ERROR_MISSING_DATE;\n    }\n\n    if (dateRange.endDate < dateRange.startDate) {\n      return key === START_DATE ? ERROR_START_AFTER_END : ERROR_END_BEFORE_START;\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      startDate,\n      endDate\n    } = this.props;\n    const {\n      startDateError,\n      endDateError\n    } = this.state;\n    return <div className=\"uaa-date-range\">\n                <InputField label={i18n.t('Start Date')} type=\"date\" value={startDate} onChange={this.onStartDateChange} error={!!startDateError} validationText={startDateError} name={START_DATE} className={START_DATE} dataTest=\"uaa-startdate\" />\n                <InputField label={i18n.t('End Date')} type=\"date\" value={endDate} onChange={this.onEndDateChange} error={!!endDateError} validationText={endDateError} name={END_DATE} className={END_DATE} dataTest=\"uaa-enddate\" />\n            </div>;\n  }\n\n}\n\nDateRange.propTypes = {\n  updateFilter: PropTypes.func.isRequired,\n  updateUsageData: PropTypes.func.isRequired,\n  endDate: PropTypes.string,\n  startDate: PropTypes.string\n};\nexport default DateRange;","import { connect } from 'react-redux';\nimport * as DropDowns from './dropDownComponents';\nimport DateRangeComponent from './DateRange';\nimport { updateCategory, updateFilterAndGetData, updateFilter, updateUsageData } from '../../actions';\nexport const CategoryDropDown = connect(createValueGetterForFilterKey('category'), {\n  onChange: ({\n    selected\n  }) => updateCategory(selected)\n})(DropDowns.Category);\nexport const DateRange = connect(mapDateRangeProps, {\n  updateFilter,\n  updateUsageData\n})(DateRangeComponent);\nexport const IntervalDropDown = connect(createValueGetterForFilterKey('interval'), {\n  onChange: createFilterUpdater(updateFilterAndGetData, 'interval')\n})(DropDowns.Interval);\nexport const AggregationLevelDropDown = connect(createValueGetterForFilterKey('aggregationLevel'), {\n  onChange: createFilterUpdater(updateFilter, 'aggregationLevel')\n})(DropDowns.AggregationLevel);\nexport const ChartTypeDropDown = connect(createValueGetterForFilterKey('chartType'), {\n  onChange: createFilterUpdater(updateFilter, 'chartType')\n})(DropDowns.ChartType);\nexport const EventTypeDropDown = connect(createValueGetterForFilterKey('eventType'), {\n  onChange: createFilterUpdater(updateFilterAndGetData, 'eventType')\n})(DropDowns.EventType);\nexport const PageSizeDropDown = connect(createValueGetterForFilterKey('pageSize'), {\n  onChange: createFilterUpdater(updateFilterAndGetData, 'pageSize')\n})(DropDowns.PageSize);\nexport const SortOrderDropDown = connect(createValueGetterForFilterKey('sortOrder'), {\n  onChange: createFilterUpdater(updateFilterAndGetData, 'sortOrder')\n})(DropDowns.SortOrder);\nexport function createValueGetterForFilterKey(key) {\n  return function (state) {\n    return {\n      label: key,\n      value: state.filter[key]\n    };\n  };\n}\n\nfunction createFilterUpdater(updaterFn, filterKey) {\n  return function ({\n    selected\n  }) {\n    return updaterFn(filterKey, selected);\n  };\n}\n\nexport function mapDateRangeProps(state) {\n  return {\n    startDate: state.filter.startDate,\n    endDate: state.filter.endDate\n  };\n}","import React, { Fragment } from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport * as Fields from './FilterFields';\nimport { FAVORITE_VIEWS, TOP_FAVORITES } from '../constants/categories';\nimport './FilterSideBar.css';\nexport function FilterSideBar({\n  showDateFields,\n  showFavoriteViewsFields,\n  showTopFavoritesFields\n}) {\n  return <aside className=\"uaa-filter-sidebar\">\n            <h1 className=\"uaa-app-header\">{i18n.t('Usage Analytics')}</h1>\n            <Fields.CategoryDropDown />\n            {showDateFields && <Fragment>\n                    <Fields.DateRange />\n                    <Fields.IntervalDropDown />\n                </Fragment>}\n            {showFavoriteViewsFields && <Fragment>\n                    <Fields.AggregationLevelDropDown />\n                    <Fields.ChartTypeDropDown />\n                </Fragment>}\n            {showTopFavoritesFields && <Fragment>\n                    <Fields.EventTypeDropDown />\n                    <Fields.PageSizeDropDown />\n                    <Fields.SortOrderDropDown />\n                </Fragment>}\n        </aside>;\n}\nFilterSideBar.propTypes = {\n  showDateFields: PropTypes.bool,\n  showFavoriteViewsFields: PropTypes.bool,\n  showTopFavoritesFields: PropTypes.bool\n};\nexport function mapStateToProps({\n  filter: {\n    category\n  }\n}) {\n  return {\n    showDateFields: category !== TOP_FAVORITES,\n    showTopFavoritesFields: category === TOP_FAVORITES,\n    showFavoriteViewsFields: category === FAVORITE_VIEWS\n  };\n}\nexport default connect(mapStateToProps)(FilterSideBar);","import i18n from '@dhis2/d2-i18n';\nexport const date = {\n  key: 'date',\n  label: i18n.t('Date')\n};\nexport const mapViews = {\n  key: 'mapViews',\n  label: i18n.t('Map')\n};\nexport const chartViews = {\n  key: 'chartViews',\n  label: i18n.t('Chart')\n};\nexport const pivotTableViews = {\n  key: 'pivotTableViews',\n  label: i18n.t('Pivot Table')\n};\nexport const eventReportViews = {\n  key: 'eventReportViews',\n  label: i18n.t('Event Report')\n};\nexport const eventChartViews = {\n  key: 'eventChartViews',\n  label: i18n.t('Event Chart')\n};\nexport const dashboardViews = {\n  key: 'dashboardViews',\n  label: i18n.t('Dashboard')\n};\nexport const dataSetReportViews = {\n  key: 'dataSetReportViews',\n  label: i18n.t('Data Set Report')\n};\nexport const totalViews = {\n  key: 'totalViews',\n  label: i18n.t('Total')\n};\nexport const averageMapViews = {\n  key: 'averageMapViews',\n  label: i18n.t('Average Map')\n};\nexport const averageChartViews = {\n  key: 'averageChartViews',\n  label: i18n.t('Average Chart')\n};\nexport const averagePivotTableViews = {\n  key: 'averagePivotTableViews',\n  label: i18n.t('Average Pivot Table')\n};\nexport const averageEventReportViews = {\n  key: 'averageEventReportViews',\n  label: i18n.t('Average Event Report')\n};\nexport const averageEventChartViews = {\n  key: 'averageEventChartViews',\n  label: i18n.t('Average Event Chart')\n};\nexport const averageDashboardViews = {\n  key: 'averageDashboardViews',\n  label: i18n.t('Average Dashboard')\n};\nexport const averageViews = {\n  key: 'averageViews',\n  label: i18n.t('Average')\n};\nexport const savedMaps = {\n  key: 'savedMaps',\n  label: i18n.t('Maps')\n};\nexport const savedCharts = {\n  key: 'savedCharts',\n  label: i18n.t('Charts')\n};\nexport const savedPivotTables = {\n  key: 'savedPivotTables',\n  label: i18n.t('Pivot Tables')\n};\nexport const savedEventReports = {\n  key: 'savedEventReports',\n  label: i18n.t('Event Reports')\n};\nexport const savedEventCharts = {\n  key: 'savedEventCharts',\n  label: i18n.t('Event Charts')\n};\nexport const savedDashboards = {\n  key: 'savedDashboards',\n  label: i18n.t('Dashboards')\n};\nexport const savedIndicators = {\n  key: 'savedIndicators',\n  label: i18n.t('Indicators')\n};\nexport const activeUsers = {\n  key: 'activeUsers',\n  label: i18n.t('Active Users')\n};\nexport const users = {\n  key: 'users',\n  label: i18n.t('Total Users')\n};\nexport const position = {\n  key: 'position',\n  label: i18n.t('Position')\n};\nexport const name = {\n  key: 'name',\n  label: i18n.t('Name')\n};\nexport const views = {\n  key: 'views',\n  label: i18n.t('Views')\n};\nexport const id = {\n  key: 'id',\n  label: i18n.t('ID')\n};\nexport const created = {\n  key: 'created',\n  label: i18n.t('Created')\n};\nexport const savedDataValues = {\n  key: 'savedDataValues',\n  label: i18n.t('Data Values')\n};","import * as CATS from './categories';\nimport * as AGGREG from './aggregations';\nimport * as CHARTS from './chartTypes';\nimport * as PROPS from './properties';\nconst FAVORITE_VIEWS_SUM_FIELDS = [PROPS.mapViews, PROPS.chartViews, PROPS.pivotTableViews, PROPS.eventReportViews, PROPS.eventChartViews, PROPS.dashboardViews, PROPS.dataSetReportViews];\nconst FAVORITE_VIEWS_AVG_FIELDS = [PROPS.averageMapViews, PROPS.averageChartViews, PROPS.averagePivotTableViews, PROPS.averageEventReportViews, PROPS.averageEventChartViews, PROPS.averageDashboardViews];\nconst FAVORITES_SAVED_FIELDS = [PROPS.savedMaps, PROPS.savedCharts, PROPS.savedPivotTables, PROPS.savedEventReports, PROPS.savedEventCharts, PROPS.savedDashboards, PROPS.savedIndicators];\nconst USERS_FIELDS = [PROPS.activeUsers, PROPS.users];\nexport const TABLE_FIELDS = {\n  [CATS.FAVORITE_VIEWS]: {\n    [AGGREG.SUM]: [PROPS.date, ...FAVORITE_VIEWS_SUM_FIELDS, PROPS.totalViews],\n    [AGGREG.AVERAGE]: [PROPS.date, ...FAVORITE_VIEWS_AVG_FIELDS, PROPS.averageViews]\n  },\n  [CATS.FAVORITES_SAVED]: [PROPS.date, ...FAVORITES_SAVED_FIELDS],\n  [CATS.USERS]: [PROPS.date, ...USERS_FIELDS],\n  [CATS.TOP_FAVORITES]: [PROPS.position, PROPS.name, PROPS.views, PROPS.id, PROPS.created],\n  [CATS.DATA_VALUES]: [PROPS.date, PROPS.savedDataValues]\n};\nexport const CHART_FIELDS = {\n  [CATS.FAVORITE_VIEWS]: {\n    [AGGREG.SUM]: {\n      [CHARTS.ALL]: FAVORITE_VIEWS_SUM_FIELDS,\n      [CHARTS.TOTAL]: [PROPS.totalViews]\n    },\n    [AGGREG.AVERAGE]: {\n      [CHARTS.ALL]: FAVORITE_VIEWS_AVG_FIELDS,\n      [CHARTS.TOTAL]: [PROPS.averageViews]\n    }\n  },\n  [CATS.FAVORITES_SAVED]: FAVORITES_SAVED_FIELDS,\n  [CATS.USERS]: USERS_FIELDS,\n  [CATS.DATA_VALUES]: [PROPS.savedDataValues]\n};","import store from '../store';\nimport { YEAR, MONTH, WEEK, DAY } from '../constants/intervals';\nimport i18n from '@dhis2/d2-i18n';\nconst dateFormats = {\n  yyyymmdd: {\n    day: 'numeric',\n    month: 'short',\n    year: 'numeric'\n  },\n  yyyymm: {\n    month: 'short',\n    year: 'numeric'\n  }\n};\nconst weekStr = i18n.t('Week');\nexport function getDisplayDateForInterval({\n  year,\n  month,\n  week,\n  day\n}, interval) {\n  switch (interval) {\n    case YEAR:\n      return year;\n\n    case MONTH:\n      return getDisplayDateFromYearMonthDay(year, month);\n\n    case WEEK:\n      return `${weekStr} ${week} / ${year}`;\n\n    case DAY:\n    default:\n      return getDisplayDateFromYearMonthDay(year, month, day);\n  }\n}\nexport function getDisplayDateFromIsoString(isoString) {\n  const date = new Date(isoString);\n  return getDisplayDate(date, dateFormats.yyyymmdd);\n}\nexport function getDisplayDateFromYearMonthDay(year, month, day) {\n  const date = day ? new Date(year, month - 1, day) : new Date(year, month - 1);\n  const format = day ? dateFormats.yyyymmdd : dateFormats.yyyymm;\n  return getDisplayDate(date, format);\n}\n\nfunction getDisplayDate(date, dateFormatOptions) {\n  const state = store.getState();\n  const locale = state.locale || 'en';\n  return new Intl.DateTimeFormat(locale, dateFormatOptions).format(date);\n}","import i18n from '@dhis2/d2-i18n';\nexport const colors = ['#7cb5ec', '#CC6600', '#CCCC00', '#66CC00', '#ff0066', '#000000', '#00CCCC'];\nexport const options = {\n  animation: {\n    duration: 180\n  },\n  legend: {\n    position: 'bottom'\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: 'nearest'\n  },\n  scales: {\n    xAxes: [{\n      display: true,\n      scaleLabel: {\n        display: true\n      },\n      ticks: {\n        maxRotation: 45,\n        minRotation: 45\n      }\n    }],\n    yAxes: [{\n      display: true,\n      scaleLabel: {\n        display: true,\n        labelString: i18n.t('Values')\n      },\n      ticks: {\n        suggestedMin: 0,\n        precision: 0\n      }\n    }]\n  }\n};\nexport const dataSet = {\n  backgroundColor: 'rgba(0, 0, 0, 0)',\n  fill: false,\n  lineTension: 0\n};","import { CHART_FIELDS as FIELDS } from '../../constants/fields';\nimport CATEGORIES, { FAVORITE_VIEWS } from '../../constants/categories';\nimport { getDisplayDateForInterval } from '../../utils/date';\nimport * as config from './config'; // This will ensure that the chart at has an yAxis from 0 - 1\n\nconst MIN_SUGGESTED_MAX_VALUE = 1;\nexport default function parseChartData({\n  aggregationLevel,\n  category,\n  chartType,\n  interval\n}, dataPoints) {\n  const labels = [];\n  const datasets = [];\n  const selectedCategory = CATEGORIES.find(c => c.value === category);\n  let max = MIN_SUGGESTED_MAX_VALUE;\n  let min = null;\n  const fields = category === FAVORITE_VIEWS ? FIELDS[category][aggregationLevel][chartType] : FIELDS[category];\n  const dataPointsLen = dataPoints.length;\n  const fieldsLen = fields.length;\n\n  for (let dataPointIndex = 0; dataPointIndex < dataPointsLen; dataPointIndex++) {\n    const dataPoint = dataPoints[dataPointIndex];\n    labels.push(getDisplayDateForInterval(dataPoint, interval));\n\n    for (let fieldIndex = 0; fieldIndex < fieldsLen; fieldIndex++) {\n      const field = fields[fieldIndex];\n\n      if (dataPointIndex === 0) {\n        datasets.push({ ...config.dataSet,\n          label: field.label,\n          data: [],\n          borderColor: config.colors[fieldIndex]\n        });\n      }\n\n      const pointValue = dataPoint[field.key];\n\n      if (pointValue > max) {\n        max = pointValue;\n      }\n\n      if (min === null || pointValue < min) {\n        min = pointValue;\n      }\n\n      datasets[fieldIndex].data.push(pointValue);\n    }\n  }\n\n  config.options.scales.yAxes[0].ticks.suggestedMax = max;\n  config.options.scales.yAxes[0].ticks.suggestedMin = min;\n  config.options.onResize = onChartResize;\n  return {\n    data: {\n      labels,\n      datasets\n    },\n    options: config.options,\n    title: selectedCategory.label,\n    subtitle: selectedCategory.subtitle\n  };\n}\nexport function onChartResize(chart) {\n  chart.resize();\n}","import React, { Fragment } from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { connect } from 'react-redux';\nimport { CircularLoader } from '@dhis2/ui';\nimport { Line } from 'react-chartjs-2';\nimport parseChartData from './parseChartData';\nimport { LOADING, ERROR } from '../../constants/statuses';\nimport { TOP_FAVORITES } from '../../constants/categories';\nimport './Chart.css';\nconst baseClassName = 'uua-data-container uua-chart-container';\nconst loadingClassName = ' uua-data-container--loading';\nexport function Chart({\n  shouldHide,\n  loading,\n  chartConfig\n}) {\n  let content;\n\n  if (shouldHide) {\n    return null;\n  } else if (loading) {\n    content = <CircularLoader overlay />;\n  } else {\n    const {\n      options,\n      data,\n      title,\n      subtitle\n    } = chartConfig;\n    content = <Fragment>\n                <h4 className=\"uaa-chart-title\">{title}</h4>\n                <h6 className=\"uaa-chart-subtitle\">{subtitle}</h6>\n                {\n        /*\n           chart.js canvas needs a dedicated wrapper to have a responsive size\n           https://www.chartjs.org/docs/latest/general/responsive.html#important-note\n        */\n      }\n                <div className=\"uaa-chart-wrap\">\n                    <Line data={data} options={options} />\n                </div>\n            </Fragment>;\n  }\n\n  const className = loading ? baseClassName + loadingClassName : baseClassName;\n  return <div className={className}>{content}</div>;\n}\nChart.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  shouldHide: PropTypes.bool.isRequired,\n  chartConfig: PropTypes.object\n}; // The Chart is not displayed for category TOP_FAVORITES, but it should also\n// be hidden when usageData === ERROR, because one Error message is enough,\n// and this Error will be displayed in the Table component\n\nexport function mapStateToProps({\n  usageData,\n  filter\n}) {\n  const shouldHide = filter.category === TOP_FAVORITES || usageData === ERROR;\n  const loading = usageData === LOADING;\n  return {\n    shouldHide,\n    loading,\n    chartConfig: shouldHide || loading ? null : parseChartData(filter, usageData)\n  };\n}\nexport default connect(mapStateToProps)(Chart);","import i18n from '@dhis2/d2-i18n';\nimport PropTypes from '@dhis2/prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { CircularLoader } from '@dhis2/ui';\nimport { FAVORITE_VIEWS } from '../constants/categories';\nimport { TABLE_FIELDS as FIELDS } from '../constants/fields';\nimport { date as dateField, created as createdField } from '../constants/properties';\nimport { ERROR, LOADING } from '../constants/statuses';\nimport Error from './Error';\nimport { getDisplayDateForInterval, getDisplayDateFromIsoString } from '../utils/date';\nimport './Table.css';\nconst baseClassName = 'uua-data-container';\nconst loadingClassName = ' uua-data-container--loading';\nexport const TableHead = ({\n  headers\n}) => <thead>\n        <tr>\n            {headers.map((header, i) => <th key={`h-${i}`}>{header}</th>)}\n        </tr>\n    </thead>;\nexport const TableBody = ({\n  rows\n}) => <tbody>\n        {rows.map((row, i) => <TableRow key={`row-${i}`} cells={row} />)}\n    </tbody>;\nexport const TableRow = ({\n  cells\n}) => <tr>\n        {cells.map((text, i) => <td key={`cell-${i}`}>{text}</td>)}\n    </tr>;\nexport function Table({\n  error,\n  loading,\n  tableData\n}) {\n  let content;\n\n  if (error) {\n    content = <Error message={i18n.t('There was an error retrieving the usage analytics data')} />;\n  } else if (loading) {\n    content = <CircularLoader overlay />;\n  } else {\n    const {\n      headers,\n      rows\n    } = tableData;\n    content = <table className=\"uaa-data-table\">\n                <TableHead headers={headers} />\n                <TableBody rows={rows} />\n            </table>;\n  }\n\n  const className = loading ? baseClassName + loadingClassName : baseClassName;\n  return <div className={className}>{content}</div>;\n}\nTable.propTypes = {\n  error: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n  tableData: PropTypes.object\n};\nTableHead.propTypes = {\n  headers: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nTableBody.propTypes = {\n  rows: PropTypes.arrayOf(PropTypes.array).isRequired\n};\nTableRow.propTypes = {\n  cells: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired\n};\nexport function mapStateToProps({\n  usageData,\n  filter\n}) {\n  const error = usageData === ERROR;\n  const loading = usageData === LOADING;\n  return {\n    error,\n    loading,\n    tableData: loading || error ? null : parseTableData(filter, usageData)\n  };\n}\n\nfunction parseTableData({\n  aggregationLevel,\n  category,\n  interval\n}, dataPoints) {\n  const fields = category === FAVORITE_VIEWS ? FIELDS[category][aggregationLevel] : FIELDS[category];\n  return {\n    headers: fields.map(({\n      label\n    }) => label),\n    rows: dataPoints.map(dataPoint => fields.map(field => {\n      if (field.key === dateField.key) {\n        return getDisplayDateForInterval(dataPoint, interval);\n      }\n\n      if (field.key === createdField.key) {\n        return getDisplayDateFromIsoString(dataPoint[field.key]);\n      }\n\n      return dataPoint[field.key];\n    }))\n  };\n}\n\nexport default connect(mapStateToProps)(Table);","import React, { Component } from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { Layer, CenteredContent, CircularLoader } from '@dhis2/ui';\nimport { LOADING, ERROR } from '../constants/statuses';\nimport { initApp } from '../actions';\nimport Error from './Error';\nimport FilterSideBar from './FilterSideBar';\nimport Chart from './Chart';\nimport Table from './Table';\nexport class UsageAnalytics extends Component {\n  componentDidMount() {\n    this.props.initApp();\n  }\n\n  render() {\n    const {\n      appStatus\n    } = this.props;\n\n    if (appStatus === LOADING) {\n      return <Layer translucent>\n                    <CenteredContent>\n                        <CircularLoader large />\n                    </CenteredContent>\n                </Layer>;\n    }\n\n    if (appStatus === ERROR) {\n      return <Error message={i18n.t('Error loading application.')} />;\n    }\n\n    return <main className=\"uaa-container\">\n                <FilterSideBar />\n                <section className=\"uaa-content\">\n                    <Chart />\n                    <Table />\n                </section>\n            </main>;\n  }\n\n}\nUsageAnalytics.propTypes = {\n  appStatus: PropTypes.string,\n  initApp: PropTypes.func\n};\n\nconst mapStateToProps = ({\n  appStatus\n}) => ({\n  appStatus\n});\n\nexport default connect(mapStateToProps, {\n  initApp\n})(UsageAnalytics);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { useConfig } from '@dhis2/app-runtime';\nimport store from '../store';\nimport api from '../api';\nimport UsageAnalytics from './UsageAnalytics';\nimport '../index.css';\n\nfunction App() {\n  const {\n    baseUrl\n  } = useConfig();\n  api.setBaseUrl(baseUrl);\n  return <Provider store={store}>\n            <UsageAnalytics />\n        </Provider>;\n}\n\nexport default App;"],"sourceRoot":""}