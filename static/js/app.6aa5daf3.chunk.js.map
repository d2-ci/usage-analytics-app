{"version":3,"sources":["D2App/constants/categories.js","D2App/constants/intervals.js","D2App/constants/aggregations.js","D2App/constants/chartTypes.js","D2App/constants/eventTypes.js","D2App/constants/sortOrders.js","D2App/reducers/filter.js","D2App/store.js","D2App/reducers/appStatus.js","D2App/constants/statuses.js","D2App/actions/types.js","D2App/reducers/usageData.js","D2App/api/get.js","D2App/api/index.js","D2App/actions/index.js","D2App/components/Error.js","D2App/constants/pageSizes.js","D2App/components/FilterFields/dropDownComponents.js","D2App/components/FilterFields/DateRange.js","D2App/components/FilterFields/index.js","D2App/components/FilterSideBar.js","D2App/constants/properties.js","D2App/constants/fields.js","D2App/utils/date.js","D2App/components/Chart/config.js","D2App/components/Chart/parseChartData.js","D2App/components/Chart/index.js","D2App/components/Table.js","D2App/components/UsageAnalytics.js","D2App/components/App.js"],"names":["CATEGORIES","value","label","i18n","t","subtitle","INTERVALS","AGGREGATIONS","CHART_TYPES","EVENT_TYPES","SORT_ORDERS","getInitialState","endDate","startDate","Date","valueOf","setMonth","getMonth","category","parseDate","interval","aggregationLevel","chartType","eventType","pageSize","sortOrder","date","year","getFullYear","month","day","getDate","length","join","middlewares","ReduxThunk","rootReducer","combineReducers","appStatus","state","type","usageData","payload","filter","key","createStore","applyMiddleware","defaultConfig","method","credentials","getJSON","baseUrl","path","config","fetch","then","response","ok","Error","statusText","Promise","reject","get","json","data","status","message","api","getFavorites","queryParams","now","getDataStatistics","setBaseUrl","url","getUsageData","updateCategory","dispatch","getState","oldCategory","updateFilter","newCategory","isNewDataRequiredAfterCategoryChange","updateFilterAndGetData","name","createAction","a","async","className","PAGE_SIZES","DropDown","options","rest","SingleSelectField","selected","Object","keys","map","SingleSelectOption","ERROR_PATTERN","ERROR_MISSING_DATE","ERROR_END_BEFORE_START","ERROR_START_AFTER_END","DateRange","props","startDateError","endDateError","onStartDateChange","bind","onEndDateChange","updateUsageData","debounce","this","onChange","dateRange","errorKey","otherErrorKey","error","getError","otherError","setState","test","InputField","validationText","dataTest","Component","CategoryDropDown","connect","createValueGetterForFilterKey","DateRangeComponent","IntervalDropDown","createFilterUpdater","AggregationLevelDropDown","ChartTypeDropDown","EventTypeDropDown","PageSizeDropDown","SortOrderDropDown","updaterFn","filterKey","showDateFields","showTopFavoritesFields","showFavoriteViewsFields","mapViews","chartViews","pivotTableViews","eventReportViews","eventChartViews","dashboardViews","dataSetReportViews","totalViews","averageMapViews","averageChartViews","averagePivotTableViews","averageEventReportViews","averageEventChartViews","averageDashboardViews","averageViews","savedMaps","savedCharts","savedPivotTables","savedEventReports","savedEventCharts","savedDashboards","savedIndicators","activeUsers","users","position","views","id","created","savedDataValues","FAVORITE_VIEWS_SUM_FIELDS","PROPS","FAVORITE_VIEWS_AVG_FIELDS","FAVORITES_SAVED_FIELDS","USERS_FIELDS","TABLE_FIELDS","CHART_FIELDS","dateFormats","yyyymmdd","yyyymm","weekStr","getDisplayDateForInterval","week","getDisplayDateFromYearMonthDay","getDisplayDate","dateFormatOptions","locale","store","Intl","DateTimeFormat","format","colors","animation","duration","legend","responsive","maintainAspectRatio","tooltips","mode","scales","xAxes","display","scaleLabel","ticks","maxRotation","minRotation","yAxes","labelString","suggestedMin","precision","dataSet","backgroundColor","fill","lineTension","parseChartData","dataPoints","labels","datasets","title","max","min","fields","FIELDS","dataPointsLen","fieldsLen","dataPointIndex","dataPoint","push","fieldIndex","field","borderColor","pointValue","suggestedMax","onResize","onChartResize","chart","resize","shouldHide","loading","chartConfig","content","CircularLoader","overlay","baseClassName","TableHead","headers","header","i","TableBody","rows","row","cells","TableRow","text","parseTableData","dateField","createdField","isoString","tableData","UsageAnalytics","initApp","ScreenCover","large","App","useConfig"],"mappings":"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","file":"static/js/app.6aa5daf3.chunk.js","sourcesContent":["import i18n from '@dhis2/d2-i18n';\nexport const FAVORITE_VIEWS = 'FAVORITE_VIEWS';\nexport const FAVORITES_SAVED = 'FAVORITES_SAVED';\nexport const USERS = 'USERS';\nexport const TOP_FAVORITES = 'TOP_FAVORITES';\nexport const DATA_VALUES = 'DATA_VALUES';\nconst CATEGORIES = {\n  [FAVORITE_VIEWS]: {\n    value: FAVORITE_VIEWS,\n    label: i18n.t('Favorite views'),\n    subtitle: i18n.t('Number of times users looked at analysis favorites')\n  },\n  [FAVORITES_SAVED]: {\n    value: FAVORITES_SAVED,\n    label: i18n.t('Favorites saved'),\n    subtitle: i18n.t('Number of analysis favorites created by users')\n  },\n  [USERS]: {\n    value: USERS,\n    label: i18n.t('Users'),\n    subtitle: i18n.t('Number of users in the system')\n  },\n  [TOP_FAVORITES]: {\n    value: TOP_FAVORITES,\n    label: i18n.t('Top favorites')\n  },\n  [DATA_VALUES]: {\n    value: DATA_VALUES,\n    label: i18n.t('Data values'),\n    subtitle: i18n.t('Number of data values saved in the system')\n  }\n};\nexport default CATEGORIES;","import i18n from '@dhis2/d2-i18n';\nexport const DAY = 'DAY';\nexport const WEEK = 'WEEK';\nexport const MONTH = 'MONTH';\nexport const YEAR = 'YEAR';\nconst INTERVALS = {\n  [DAY]: {\n    value: DAY,\n    label: i18n.t('Day')\n  },\n  [WEEK]: {\n    value: WEEK,\n    label: i18n.t('Week')\n  },\n  [MONTH]: {\n    value: MONTH,\n    label: i18n.t('Month')\n  },\n  [YEAR]: {\n    value: YEAR,\n    label: i18n.t('Year')\n  }\n};\nexport default INTERVALS;","import i18n from '@dhis2/d2-i18n';\nexport const SUM = 'SUM';\nexport const AVERAGE = 'AVERAGE';\nconst AGGREGATIONS = {\n  [SUM]: {\n    value: SUM,\n    label: i18n.t('Sum')\n  },\n  [AVERAGE]: {\n    value: AVERAGE,\n    label: i18n.t('Average')\n  }\n};\nexport default AGGREGATIONS;","import i18n from '@dhis2/d2-i18n';\nexport const ALL = 'ALL';\nexport const TOTAL = 'TOTAL';\nconst CHART_TYPES = {\n  [ALL]: {\n    value: ALL,\n    label: i18n.t('All')\n  },\n  [TOTAL]: {\n    value: TOTAL,\n    label: i18n.t('Total')\n  }\n};\nexport default CHART_TYPES;","import i18n from '@dhis2/d2-i18n';\nexport const CHART_VIEW = 'CHART_VIEW';\nexport const MAP_VIEW = 'MAP_VIEW';\nexport const REPORT_TABLE_VIEW = 'REPORT_TABLE_VIEW';\nexport const EVENT_REPORT_VIEW = 'EVENT_REPORT_VIEW';\nexport const EVENT_CHART_VIEW = 'EVENT_CHART_VIEW';\nexport const DASHBOARD_VIEW = 'DASHBOARD_VIEW';\nexport const DATA_SET_REPORT_VIEW = 'DATA_SET_REPORT_VIEW';\nconst EVENT_TYPES = {\n  [CHART_VIEW]: {\n    value: CHART_VIEW,\n    label: i18n.t('Chart')\n  },\n  [MAP_VIEW]: {\n    value: MAP_VIEW,\n    label: i18n.t('Map')\n  },\n  [REPORT_TABLE_VIEW]: {\n    value: REPORT_TABLE_VIEW,\n    label: i18n.t('Report table')\n  },\n  [EVENT_REPORT_VIEW]: {\n    value: EVENT_REPORT_VIEW,\n    label: i18n.t('Event report')\n  },\n  [EVENT_CHART_VIEW]: {\n    value: EVENT_CHART_VIEW,\n    label: i18n.t('Event chart')\n  },\n  [DASHBOARD_VIEW]: {\n    value: DASHBOARD_VIEW,\n    label: i18n.t('Dashboard')\n  },\n  [DATA_SET_REPORT_VIEW]: {\n    value: DATA_SET_REPORT_VIEW,\n    label: i18n.t('Data set report')\n  }\n};\nexport default EVENT_TYPES;","import i18n from '@dhis2/d2-i18n';\nexport const ASC = 'ASC';\nexport const DESC = 'DESC';\nconst SORT_ORDERS = {\n  [ASC]: {\n    value: ASC,\n    label: i18n.t('Ascending')\n  },\n  [DESC]: {\n    value: DESC,\n    label: i18n.t('Descending')\n  }\n};\nexport default SORT_ORDERS;","import { FILTER_UPDATED } from '../actions/types';\nimport { FAVORITE_VIEWS } from '../constants/categories';\nimport { WEEK } from '../constants/intervals';\nimport { SUM } from '../constants/aggregations';\nimport { ALL } from '../constants/chartTypes';\nimport { CHART_VIEW } from '../constants/eventTypes';\nimport { ASC } from '../constants/sortOrders';\nexport default function filter(state = getInitialState(new Date()), {\n  type,\n  payload\n}) {\n  switch (type) {\n    case FILTER_UPDATED:\n      return { ...state,\n        [payload.key]: payload.value\n      };\n\n    default:\n      return state;\n  }\n}\nexport function getInitialState(endDate) {\n  const startDate = new Date(endDate.valueOf());\n  startDate.setMonth(startDate.getMonth() - 4);\n  return {\n    category: FAVORITE_VIEWS,\n    startDate: parseDate(startDate),\n    endDate: parseDate(endDate),\n    interval: WEEK,\n    aggregationLevel: SUM,\n    chartType: ALL,\n    eventType: CHART_VIEW,\n    pageSize: '25',\n    sortOrder: ASC\n  };\n}\nexport function parseDate(date) {\n  const year = date.getFullYear();\n  let month = '' + (date.getMonth() + 1);\n  let day = '' + date.getDate();\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n  return [year, month, day].join('-');\n}","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport appStatus from './reducers/appStatus';\nimport usageData from './reducers/usageData';\nimport filter from './reducers/filter';\nconst middlewares = [ReduxThunk];\nconst shouldLog = false;\n\nif (process.env.NODE_ENV === 'development' && shouldLog) {\n  middlewares.push(logger);\n}\n\nconst rootReducer = combineReducers({\n  appStatus,\n  usageData,\n  filter\n});\nexport default createStore(rootReducer, applyMiddleware(...middlewares));","import { LOADING, READY, ERROR } from '../constants/statuses';\nimport { APP_LOAD_SUCCESS, APP_LOAD_ERROR } from '../actions/types';\nexport default function appStatus(state = LOADING, {\n  type\n}) {\n  switch (type) {\n    case APP_LOAD_SUCCESS:\n      return READY;\n\n    case APP_LOAD_ERROR:\n      return ERROR;\n\n    default:\n      return state;\n  }\n}","export const LOADING = 'LOADING';\nexport const READY = 'READY';\nexport const ERROR = 'ERROR';","// INITIALIZATION\nexport const APP_LOAD_SUCCESS = 'APP_LOAD_SUCCESS';\nexport const APP_LOAD_ERROR = 'APP_LOAD_ERROR'; // STATISTICS\n\nexport const USAGE_DATA_REQUESTED = 'USAGE_DATA_REQUESTED';\nexport const USAGE_DATA_RECEIVED = 'USAGE_DATA_RECEIVED';\nexport const USAGE_DATA_ERRORED = 'USAGE_DATA_ERRORED'; // FILTER\n\nexport const FILTER_UPDATED = 'FILTER_UPDATED';","import { LOADING, ERROR } from '../constants/statuses';\nimport { APP_LOAD_SUCCESS, USAGE_DATA_REQUESTED, USAGE_DATA_RECEIVED, USAGE_DATA_ERRORED } from '../actions/types';\nexport default function usageData(state = LOADING, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case USAGE_DATA_REQUESTED:\n      return LOADING;\n\n    case APP_LOAD_SUCCESS:\n      return payload;\n\n    case USAGE_DATA_RECEIVED:\n      return payload;\n\n    case USAGE_DATA_ERRORED:\n      return ERROR;\n\n    default:\n      return state;\n  }\n}","const defaultConfig = {\n  method: 'GET',\n  credentials: 'include'\n};\nexport function get(baseUrl, path, config = defaultConfig) {\n  if (!baseUrl) {\n    return Promise.reject(new Error('A baseUrl must be passed'));\n  }\n\n  if (!path) {\n    return Promise.reject(new Error('A path must be passed'));\n  }\n\n  return fetch(`${baseUrl}/api/${path}`, config).then(response => {\n    if (response.ok) {\n      return response;\n    }\n\n    throw new Error(response.statusText);\n  });\n}\nexport function getJSON(baseUrl, path) {\n  return get(baseUrl, path).then(response => response.json()).then(data => {\n    if (data.status === 'ERROR') {\n      throw new Error(data.message);\n    } else {\n      return data;\n    }\n  });\n}","import { TOP_FAVORITES } from '../constants/categories';\nimport { getJSON } from './get';\n\nconst api = (() => {\n  let baseUrl = null;\n\n  const setBaseUrl = url => {\n    baseUrl = url;\n  };\n\n  const getFavorites = ({\n    eventType,\n    pageSize,\n    sortOrder\n  }) => {\n    const queryParams = `eventType=${eventType}&pageSize=${pageSize}&sortOrder=${sortOrder}&_=${Date.now()}`;\n    return getJSON(baseUrl, `dataStatistics/favorites?${queryParams}`);\n  };\n\n  const getDataStatistics = ({\n    startDate,\n    endDate,\n    interval\n  }) => {\n    const queryParams = `startDate=${startDate}&endDate=${endDate}&interval=${interval}&_=${Date.now()}`;\n    return getJSON(baseUrl, `dataStatistics?${queryParams}`);\n  };\n\n  const getUsageData = filter => {\n    return filter.category === TOP_FAVORITES ? getFavorites({\n      eventType: filter.eventType,\n      pageSize: filter.pageSize,\n      sortOrder: filter.sortOrder\n    }) : getDataStatistics({\n      startDate: filter.startDate,\n      endDate: filter.endDate,\n      interval: filter.interval\n    });\n  };\n\n  return {\n    setBaseUrl,\n    getFavorites,\n    getDataStatistics,\n    getUsageData\n  };\n})();\n\nexport default api;","import api from '../api';\nimport * as ACTIONS from '../actions/types';\nimport { TOP_FAVORITES } from '../constants/categories';\nexport const initApp = () => async (dispatch, getState) => {\n  try {\n    const payload = await api.getUsageData(getState().filter);\n    dispatch(createAction(ACTIONS.APP_LOAD_SUCCESS, payload));\n  } catch (error) {\n    dispatch(createAction(ACTIONS.APP_LOAD_ERROR, error));\n  }\n}; // Fetch data if category has changed from TOP_FAVORITES to anything else\n// or vice versa\n\nexport const updateCategory = value => (dispatch, getState) => {\n  const {\n    filter\n  } = getState();\n  const oldCategory = filter.category;\n  dispatch(updateFilter('category', value));\n\n  if (isNewDataRequiredAfterCategoryChange(oldCategory, value)) {\n    return getUsageData({ ...filter,\n      category: value\n    }, dispatch);\n  }\n};\nexport const updateFilterAndGetData = (name, value) => (dispatch, getState) => {\n  dispatch(updateFilter(name, value));\n  const {\n    filter\n  } = getState();\n  return getUsageData(filter, dispatch);\n};\nexport const updateUsageData = () => (dispatch, getState) => {\n  const {\n    filter\n  } = getState();\n  return getUsageData(filter, dispatch);\n};\nexport const updateFilter = (key, value) => createAction(ACTIONS.FILTER_UPDATED, {\n  key,\n  value\n});\nexport function isNewDataRequiredAfterCategoryChange(oldCategory, newCategory) {\n  return oldCategory !== newCategory && (newCategory === TOP_FAVORITES && oldCategory !== TOP_FAVORITES || oldCategory === TOP_FAVORITES && newCategory !== TOP_FAVORITES);\n}\n\nasync function getUsageData(filter, dispatch) {\n  dispatch(createAction(ACTIONS.USAGE_DATA_REQUESTED));\n\n  try {\n    const usageData = await api.getUsageData(filter);\n    dispatch(createAction(ACTIONS.USAGE_DATA_RECEIVED, usageData));\n  } catch (error) {\n    dispatch(createAction(ACTIONS.USAGE_DATA_ERRORED, error));\n  }\n}\n\nfunction createAction(type, payload) {\n  return {\n    type,\n    payload\n  };\n}","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport './Error.css';\n\nfunction Error({\n  message\n}) {\n  return <div className=\"uaa-error\">{message}</div>;\n}\n\nError.propTypes = {\n  message: PropTypes.string\n};\nexport default Error;","export const PS_5 = '5';\nexport const PS_10 = '10';\nexport const PS_15 = '15';\nexport const PS_20 = '20';\nexport const PS_25 = '25';\nconst PAGE_SIZES = {\n  [PS_5]: {\n    value: PS_5,\n    label: '5'\n  },\n  [PS_10]: {\n    value: PS_10,\n    label: '10'\n  },\n  [PS_15]: {\n    value: PS_15,\n    label: '15'\n  },\n  [PS_20]: {\n    value: PS_20,\n    label: '20'\n  },\n  [PS_25]: {\n    value: PS_25,\n    label: '25'\n  }\n};\nexport default PAGE_SIZES;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui-core';\nimport CATEGORIES from '../../constants/categories';\nimport INTERVALS from '../../constants/intervals';\nimport AGGREGATIONS from '../../constants/aggregations';\nimport CHART_TYPES from '../../constants/chartTypes';\nimport EVENT_TYPES from '../../constants/eventTypes';\nimport PAGE_SIZES from '../../constants/pageSizes';\nimport SORT_ORDERS from '../../constants/sortOrders';\nexport const DropDown = ({\n  options,\n  value,\n  ...rest\n}) => <SingleSelectField {...rest} selected={options[value]}>\n        {Object.keys(options).map(key => <SingleSelectOption label={options[key].label} key={options[key].value} value={options[key].value} />)}\n    </SingleSelectField>;\nDropDown.propTypes = {\n  options: PropTypes.object.isRequired,\n  value: PropTypes.string.isRequired\n};\nexport const Category = props => <DropDown {...props} label={i18n.t('Category')} options={CATEGORIES} />;\nexport const Interval = props => <DropDown {...props} label={i18n.t('Interval')} options={INTERVALS} />;\nexport const AggregationLevel = props => <DropDown {...props} label={i18n.t('Aggregation Level')} options={AGGREGATIONS} />;\nexport const ChartType = props => <DropDown {...props} label={i18n.t('Chart Type')} options={CHART_TYPES} />;\nexport const EventType = props => <DropDown {...props} label={i18n.t('Event Type')} options={EVENT_TYPES} />;\nexport const PageSize = props => <DropDown {...props} label={i18n.t('Page Size')} options={PAGE_SIZES} />;\nexport const SortOrder = props => <DropDown {...props} label={i18n.t('Sort Order')} options={SORT_ORDERS} />;","import React, { Component } from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui-core';\nimport debounce from 'lodash.debounce';\nimport './DateRange.css';\nexport const START_DATE = 'startDate';\nexport const END_DATE = 'endDate';\nexport const ERROR_PATTERN = i18n.t('Please use the format yyyy-mm-dd');\nexport const ERROR_MISSING_DATE = i18n.t('Please fill in both dates');\nexport const ERROR_END_BEFORE_START = i18n.t('End date is before start date');\nexport const ERROR_START_AFTER_END = i18n.t('Start date is after end date'); // Very basic date input. If browser doesn't support input type date,\n// it will use the pattern validation to display an error\n\nclass DateRange extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startDateError: null,\n      endDateError: null\n    };\n    this.onStartDateChange = this.onStartDateChange.bind(this);\n    this.onEndDateChange = this.onEndDateChange.bind(this);\n    this.updateUsageData = debounce(props.updateUsageData, 250);\n  }\n\n  onStartDateChange({\n    value\n  }) {\n    this.onChange(START_DATE, value);\n  }\n\n  onEndDateChange({\n    value\n  }) {\n    this.onChange(END_DATE, value);\n  }\n\n  onChange(key, value) {\n    const {\n      updateFilter,\n      ...dateRange\n    } = this.props;\n    const errorKey = `${key}Error`;\n    const otherErrorKey = key === START_DATE ? `${END_DATE}Error` : `${START_DATE}Error`;\n    const error = this.getError({ ...dateRange,\n      [key]: value\n    }, key);\n    const otherError = this.state[otherErrorKey] === ERROR_PATTERN ? ERROR_PATTERN : null;\n\n    if (this.state[errorKey] !== error) {\n      this.setState({\n        [errorKey]: error,\n        [otherErrorKey]: otherError\n      });\n    }\n\n    updateFilter(key, value);\n\n    if (!error) {\n      this.updateUsageData();\n    }\n  }\n\n  getError(dateRange, key) {\n    if (!/[0-9]{4}-[0-9]{2}-[0-9]{2}/.test(dateRange[key])) {\n      return ERROR_PATTERN;\n    }\n\n    if (!dateRange.startDate || !dateRange.endDate) {\n      return ERROR_MISSING_DATE;\n    }\n\n    if (dateRange.endDate < dateRange.startDate) {\n      return key === START_DATE ? ERROR_START_AFTER_END : ERROR_END_BEFORE_START;\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      startDate,\n      endDate\n    } = this.props;\n    const {\n      startDateError,\n      endDateError\n    } = this.state;\n    return <div className=\"uaa-date-range\">\n                <InputField label={i18n.t('Start Date')} type=\"date\" value={startDate} onChange={this.onStartDateChange} error={!!startDateError} validationText={startDateError} name={START_DATE} className={START_DATE} dataTest=\"uaa-startdate\" />\n                <InputField label={i18n.t('End Date')} type=\"date\" value={endDate} onChange={this.onEndDateChange} error={!!endDateError} validationText={endDateError} name={END_DATE} className={END_DATE} dataTest=\"uaa-enddate\" />\n            </div>;\n  }\n\n}\n\nDateRange.propTypes = {\n  updateFilter: PropTypes.func.isRequired,\n  updateUsageData: PropTypes.func.isRequired,\n  endDate: PropTypes.string,\n  startDate: PropTypes.string\n};\nexport default DateRange;","import { connect } from 'react-redux';\nimport * as DropDowns from './dropDownComponents';\nimport DateRangeComponent from './DateRange';\nimport { updateCategory, updateFilterAndGetData, updateFilter, updateUsageData } from '../../actions';\nexport const CategoryDropDown = connect(createValueGetterForFilterKey('category'), {\n  onChange: ({\n    selected: {\n      value\n    }\n  }) => updateCategory(value)\n})(DropDowns.Category);\nexport const DateRange = connect(mapDateRangeProps, {\n  updateFilter,\n  updateUsageData\n})(DateRangeComponent);\nexport const IntervalDropDown = connect(createValueGetterForFilterKey('interval'), {\n  onChange: createFilterUpdater(updateFilterAndGetData, 'interval')\n})(DropDowns.Interval);\nexport const AggregationLevelDropDown = connect(createValueGetterForFilterKey('aggregationLevel'), {\n  onChange: createFilterUpdater(updateFilter, 'aggregationLevel')\n})(DropDowns.AggregationLevel);\nexport const ChartTypeDropDown = connect(createValueGetterForFilterKey('chartType'), {\n  onChange: createFilterUpdater(updateFilter, 'chartType')\n})(DropDowns.ChartType);\nexport const EventTypeDropDown = connect(createValueGetterForFilterKey('eventType'), {\n  onChange: createFilterUpdater(updateFilterAndGetData, 'eventType')\n})(DropDowns.EventType);\nexport const PageSizeDropDown = connect(createValueGetterForFilterKey('pageSize'), {\n  onChange: createFilterUpdater(updateFilterAndGetData, 'pageSize')\n})(DropDowns.PageSize);\nexport const SortOrderDropDown = connect(createValueGetterForFilterKey('sortOrder'), {\n  onChange: createFilterUpdater(updateFilterAndGetData, 'sortOrder')\n})(DropDowns.SortOrder);\nexport function createValueGetterForFilterKey(key) {\n  return function (state) {\n    return {\n      label: key,\n      value: state.filter[key]\n    };\n  };\n}\n\nfunction createFilterUpdater(updaterFn, filterKey) {\n  return function ({\n    selected: {\n      value\n    }\n  }) {\n    return updaterFn(filterKey, value);\n  };\n}\n\nexport function mapDateRangeProps(state) {\n  return {\n    startDate: state.filter.startDate,\n    endDate: state.filter.endDate\n  };\n}","import React, { Fragment } from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport * as Fields from './FilterFields';\nimport { FAVORITE_VIEWS, TOP_FAVORITES } from '../constants/categories';\nimport './FilterSideBar.css';\nexport function FilterSideBar({\n  showDateFields,\n  showFavoriteViewsFields,\n  showTopFavoritesFields\n}) {\n  return <aside className=\"uaa-filter-sidebar\">\n            <h1 className=\"uaa-app-header\">{i18n.t('Usage Analytics')}</h1>\n            <Fields.CategoryDropDown />\n            {showDateFields && <Fragment>\n                    <Fields.DateRange />\n                    <Fields.IntervalDropDown />\n                </Fragment>}\n            {showFavoriteViewsFields && <Fragment>\n                    <Fields.AggregationLevelDropDown />\n                    <Fields.ChartTypeDropDown />\n                </Fragment>}\n            {showTopFavoritesFields && <Fragment>\n                    <Fields.EventTypeDropDown />\n                    <Fields.PageSizeDropDown />\n                    <Fields.SortOrderDropDown />\n                </Fragment>}\n        </aside>;\n}\nFilterSideBar.propTypes = {\n  showDateFields: PropTypes.bool,\n  showFavoriteViewsFields: PropTypes.bool,\n  showTopFavoritesFields: PropTypes.bool\n};\nexport function mapStateToProps({\n  filter: {\n    category\n  }\n}) {\n  return {\n    showDateFields: category !== TOP_FAVORITES,\n    showTopFavoritesFields: category === TOP_FAVORITES,\n    showFavoriteViewsFields: category === FAVORITE_VIEWS\n  };\n}\nexport default connect(mapStateToProps)(FilterSideBar);","import i18n from '@dhis2/d2-i18n';\nexport const date = {\n  key: 'date',\n  label: i18n.t('Date')\n};\nexport const mapViews = {\n  key: 'mapViews',\n  label: i18n.t('Map')\n};\nexport const chartViews = {\n  key: 'chartViews',\n  label: i18n.t('Chart')\n};\nexport const pivotTableViews = {\n  key: 'pivotTableViews',\n  label: i18n.t('Pivot Table')\n};\nexport const eventReportViews = {\n  key: 'eventReportViews',\n  label: i18n.t('Event Report')\n};\nexport const eventChartViews = {\n  key: 'eventChartViews',\n  label: i18n.t('Event Chart')\n};\nexport const dashboardViews = {\n  key: 'dashboardViews',\n  label: i18n.t('Dashboard')\n};\nexport const dataSetReportViews = {\n  key: 'dataSetReportViews',\n  label: i18n.t('Data Set Report')\n};\nexport const totalViews = {\n  key: 'totalViews',\n  label: i18n.t('Total')\n};\nexport const averageMapViews = {\n  key: 'averageMapViews',\n  label: i18n.t('Average Map')\n};\nexport const averageChartViews = {\n  key: 'averageChartViews',\n  label: i18n.t('Average Chart')\n};\nexport const averagePivotTableViews = {\n  key: 'averagePivotTableViews',\n  label: i18n.t('Average Pivot Table')\n};\nexport const averageEventReportViews = {\n  key: 'averageEventReportViews',\n  label: i18n.t('Average Event Report')\n};\nexport const averageEventChartViews = {\n  key: 'averageEventChartViews',\n  label: i18n.t('Average Event Chart')\n};\nexport const averageDashboardViews = {\n  key: 'averageDashboardViews',\n  label: i18n.t('Average Dashboard')\n};\nexport const averageViews = {\n  key: 'averageViews',\n  label: i18n.t('Average')\n};\nexport const savedMaps = {\n  key: 'savedMaps',\n  label: i18n.t('Maps')\n};\nexport const savedCharts = {\n  key: 'savedCharts',\n  label: i18n.t('Charts')\n};\nexport const savedPivotTables = {\n  key: 'savedPivotTables',\n  label: i18n.t('Pivot Tables')\n};\nexport const savedEventReports = {\n  key: 'savedEventReports',\n  label: i18n.t('Event Reports')\n};\nexport const savedEventCharts = {\n  key: 'savedEventCharts',\n  label: i18n.t('Event Charts')\n};\nexport const savedDashboards = {\n  key: 'savedDashboards',\n  label: i18n.t('Dashboards')\n};\nexport const savedIndicators = {\n  key: 'savedIndicators',\n  label: i18n.t('Indicators')\n};\nexport const activeUsers = {\n  key: 'activeUsers',\n  label: i18n.t('Active Users')\n};\nexport const users = {\n  key: 'users',\n  label: i18n.t('Total Users')\n};\nexport const position = {\n  key: 'position',\n  label: i18n.t('Position')\n};\nexport const name = {\n  key: 'name',\n  label: i18n.t('Name')\n};\nexport const views = {\n  key: 'views',\n  label: i18n.t('Views')\n};\nexport const id = {\n  key: 'id',\n  label: i18n.t('ID')\n};\nexport const created = {\n  key: 'created',\n  label: i18n.t('Created')\n};\nexport const savedDataValues = {\n  key: 'savedDataValues',\n  label: i18n.t('Data Values')\n};","import * as CATS from './categories';\nimport * as AGGREG from './aggregations';\nimport * as CHARTS from './chartTypes';\nimport * as PROPS from './properties';\nconst FAVORITE_VIEWS_SUM_FIELDS = [PROPS.mapViews, PROPS.chartViews, PROPS.pivotTableViews, PROPS.eventReportViews, PROPS.eventChartViews, PROPS.dashboardViews, PROPS.dataSetReportViews];\nconst FAVORITE_VIEWS_AVG_FIELDS = [PROPS.averageMapViews, PROPS.averageChartViews, PROPS.averagePivotTableViews, PROPS.averageEventReportViews, PROPS.averageEventChartViews, PROPS.averageDashboardViews];\nconst FAVORITES_SAVED_FIELDS = [PROPS.savedMaps, PROPS.savedCharts, PROPS.savedPivotTables, PROPS.savedEventReports, PROPS.savedEventCharts, PROPS.savedDashboards, PROPS.savedIndicators];\nconst USERS_FIELDS = [PROPS.activeUsers, PROPS.users];\nexport const TABLE_FIELDS = {\n  [CATS.FAVORITE_VIEWS]: {\n    [AGGREG.SUM]: [PROPS.date, ...FAVORITE_VIEWS_SUM_FIELDS, PROPS.totalViews],\n    [AGGREG.AVERAGE]: [PROPS.date, ...FAVORITE_VIEWS_AVG_FIELDS, PROPS.averageViews]\n  },\n  [CATS.FAVORITES_SAVED]: [PROPS.date, ...FAVORITES_SAVED_FIELDS],\n  [CATS.USERS]: [PROPS.date, ...USERS_FIELDS],\n  [CATS.TOP_FAVORITES]: [PROPS.position, PROPS.name, PROPS.views, PROPS.id, PROPS.created],\n  [CATS.DATA_VALUES]: [PROPS.date, PROPS.savedDataValues]\n};\nexport const CHART_FIELDS = {\n  [CATS.FAVORITE_VIEWS]: {\n    [AGGREG.SUM]: {\n      [CHARTS.ALL]: FAVORITE_VIEWS_SUM_FIELDS,\n      [CHARTS.TOTAL]: [PROPS.totalViews]\n    },\n    [AGGREG.AVERAGE]: {\n      [CHARTS.ALL]: FAVORITE_VIEWS_AVG_FIELDS,\n      [CHARTS.TOTAL]: [PROPS.averageViews]\n    }\n  },\n  [CATS.FAVORITES_SAVED]: FAVORITES_SAVED_FIELDS,\n  [CATS.USERS]: USERS_FIELDS,\n  [CATS.DATA_VALUES]: [PROPS.savedDataValues]\n};","import store from '../store';\nimport { YEAR, MONTH, WEEK, DAY } from '../constants/intervals';\nimport i18n from '@dhis2/d2-i18n';\nconst dateFormats = {\n  yyyymmdd: {\n    day: 'numeric',\n    month: 'short',\n    year: 'numeric'\n  },\n  yyyymm: {\n    month: 'short',\n    year: 'numeric'\n  }\n};\nconst weekStr = i18n.t('Week');\nexport function getDisplayDateForInterval({\n  year,\n  month,\n  week,\n  day\n}, interval) {\n  switch (interval) {\n    case YEAR:\n      return year;\n\n    case MONTH:\n      return getDisplayDateFromYearMonthDay(year, month);\n\n    case WEEK:\n      return `${weekStr} ${week} / ${year}`;\n\n    case DAY:\n    default:\n      return getDisplayDateFromYearMonthDay(year, month, day);\n  }\n}\nexport function getDisplayDateFromIsoString(isoString) {\n  const date = new Date(isoString);\n  return getDisplayDate(date, dateFormats.yyyymmdd);\n}\nexport function getDisplayDateFromYearMonthDay(year, month, day) {\n  const date = day ? new Date(year, month - 1, day) : new Date(year, month - 1);\n  const format = day ? dateFormats.yyyymmdd : dateFormats.yyyymm;\n  return getDisplayDate(date, format);\n}\n\nfunction getDisplayDate(date, dateFormatOptions) {\n  const state = store.getState();\n  const locale = state.locale || 'en';\n  return new Intl.DateTimeFormat(locale, dateFormatOptions).format(date);\n}","import i18n from '@dhis2/d2-i18n';\nexport const colors = ['#7cb5ec', '#CC6600', '#CCCC00', '#66CC00', '#ff0066', '#000000', '#00CCCC'];\nexport const options = {\n  animation: {\n    duration: 180\n  },\n  legend: {\n    position: 'bottom'\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: 'nearest'\n  },\n  scales: {\n    xAxes: [{\n      display: true,\n      scaleLabel: {\n        display: true\n      },\n      ticks: {\n        maxRotation: 45,\n        minRotation: 45\n      }\n    }],\n    yAxes: [{\n      display: true,\n      scaleLabel: {\n        display: true,\n        labelString: i18n.t('Values')\n      },\n      ticks: {\n        suggestedMin: 0,\n        precision: 0\n      }\n    }]\n  }\n};\nexport const dataSet = {\n  backgroundColor: 'rgba(0, 0, 0, 0)',\n  fill: false,\n  lineTension: 0\n};","import { CHART_FIELDS as FIELDS } from '../../constants/fields';\nimport CATEGORIES, { FAVORITE_VIEWS } from '../../constants/categories';\nimport { getDisplayDateForInterval } from '../../utils/date';\nimport * as config from './config'; // This will ensure that the chart at has an yAxis from 0 - 1\n\nconst MIN_SUGGESTED_MAX_VALUE = 1;\nexport default function parseChartData({\n  aggregationLevel,\n  category,\n  chartType,\n  interval\n}, dataPoints) {\n  const labels = [];\n  const datasets = [];\n  const title = CATEGORIES[category].label;\n  const subtitle = CATEGORIES[category].subtitle;\n  let max = MIN_SUGGESTED_MAX_VALUE;\n  let min = null;\n  const fields = category === FAVORITE_VIEWS ? FIELDS[category][aggregationLevel][chartType] : FIELDS[category];\n  const dataPointsLen = dataPoints.length;\n  const fieldsLen = fields.length;\n\n  for (let dataPointIndex = 0; dataPointIndex < dataPointsLen; dataPointIndex++) {\n    const dataPoint = dataPoints[dataPointIndex];\n    labels.push(getDisplayDateForInterval(dataPoint, interval));\n\n    for (let fieldIndex = 0; fieldIndex < fieldsLen; fieldIndex++) {\n      const field = fields[fieldIndex];\n\n      if (dataPointIndex === 0) {\n        datasets.push({ ...config.dataSet,\n          label: field.label,\n          data: [],\n          borderColor: config.colors[fieldIndex]\n        });\n      }\n\n      const pointValue = dataPoint[field.key];\n\n      if (pointValue > max) {\n        max = pointValue;\n      }\n\n      if (min === null || pointValue < min) {\n        min = pointValue;\n      }\n\n      datasets[fieldIndex].data.push(pointValue);\n    }\n  }\n\n  config.options.scales.yAxes[0].ticks.suggestedMax = max;\n  config.options.scales.yAxes[0].ticks.suggestedMin = min;\n  config.options.onResize = onChartResize;\n  return {\n    data: {\n      labels,\n      datasets\n    },\n    options: config.options,\n    title,\n    subtitle\n  };\n}\nexport function onChartResize(chart) {\n  chart.resize();\n}","import React, { Fragment } from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { connect } from 'react-redux';\nimport { CircularLoader } from '@dhis2/ui-core';\nimport { Line } from 'react-chartjs-2';\nimport parseChartData from './parseChartData';\nimport { LOADING, ERROR } from '../../constants/statuses';\nimport { TOP_FAVORITES } from '../../constants/categories';\nimport './Chart.css';\nconst baseClassName = 'uua-data-container uua-chart-container';\nconst loadingClassName = ' uua-data-container--loading';\nexport function Chart({\n  shouldHide,\n  loading,\n  chartConfig\n}) {\n  let content;\n\n  if (shouldHide) {\n    return null;\n  } else if (loading) {\n    content = <CircularLoader overlay />;\n  } else {\n    const {\n      options,\n      data,\n      title,\n      subtitle\n    } = chartConfig;\n    content = <Fragment>\n                <h4 className=\"uaa-chart-title\">{title}</h4>\n                <h6 className=\"uaa-chart-subtitle\">{subtitle}</h6>\n                {\n        /*\n           chart.js canvas needs a dedicated wrapper to have a responsive size\n           https://www.chartjs.org/docs/latest/general/responsive.html#important-note\n        */\n      }\n                <div className=\"uaa-chart-wrap\">\n                    <Line data={data} options={options} />\n                </div>\n            </Fragment>;\n  }\n\n  const className = loading ? baseClassName + loadingClassName : baseClassName;\n  return <div className={className}>{content}</div>;\n}\nChart.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  shouldHide: PropTypes.bool.isRequired,\n  chartConfig: PropTypes.object\n}; // The Chart is not displayed for category TOP_FAVORITES, but it should also\n// be hidden when usageData === ERROR, because one Error message is enough,\n// and this Error will be displayed in the Table component\n\nexport function mapStateToProps({\n  usageData,\n  filter\n}) {\n  const shouldHide = filter.category === TOP_FAVORITES || usageData === ERROR;\n  const loading = usageData === LOADING;\n  return {\n    shouldHide,\n    loading,\n    chartConfig: shouldHide || loading ? null : parseChartData(filter, usageData)\n  };\n}\nexport default connect(mapStateToProps)(Chart);","import i18n from '@dhis2/d2-i18n';\nimport PropTypes from '@dhis2/prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { CircularLoader } from '@dhis2/ui-core';\nimport { FAVORITE_VIEWS } from '../constants/categories';\nimport { TABLE_FIELDS as FIELDS } from '../constants/fields';\nimport { date as dateField, created as createdField } from '../constants/properties';\nimport { ERROR, LOADING } from '../constants/statuses';\nimport Error from './Error';\nimport { getDisplayDateForInterval, getDisplayDateFromIsoString } from '../utils/date';\nimport './Table.css';\nconst baseClassName = 'uua-data-container';\nconst loadingClassName = ' uua-data-container--loading';\nexport const TableHead = ({\n  headers\n}) => <thead>\n        <tr>\n            {headers.map((header, i) => <th key={`h-${i}`}>{header}</th>)}\n        </tr>\n    </thead>;\nexport const TableBody = ({\n  rows\n}) => <tbody>\n        {rows.map((row, i) => <TableRow key={`row-${i}`} cells={row} />)}\n    </tbody>;\nexport const TableRow = ({\n  cells\n}) => <tr>\n        {cells.map((text, i) => <td key={`cell-${i}`}>{text}</td>)}\n    </tr>;\nexport function Table({\n  error,\n  loading,\n  tableData\n}) {\n  let content;\n\n  if (error) {\n    content = <Error message={i18n.t('There was an error retrieving the usage analytics data')} />;\n  } else if (loading) {\n    content = <CircularLoader overlay />;\n  } else {\n    const {\n      headers,\n      rows\n    } = tableData;\n    content = <table className=\"uaa-data-table\">\n                <TableHead headers={headers} />\n                <TableBody rows={rows} />\n            </table>;\n  }\n\n  const className = loading ? baseClassName + loadingClassName : baseClassName;\n  return <div className={className}>{content}</div>;\n}\nTable.propTypes = {\n  error: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n  tableData: PropTypes.object\n};\nTableHead.propTypes = {\n  headers: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nTableBody.propTypes = {\n  rows: PropTypes.arrayOf(PropTypes.array).isRequired\n};\nTableRow.propTypes = {\n  cells: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired\n};\nexport function mapStateToProps({\n  usageData,\n  filter\n}) {\n  const error = usageData === ERROR;\n  const loading = usageData === LOADING;\n  return {\n    error,\n    loading,\n    tableData: loading || error ? null : parseTableData(filter, usageData)\n  };\n}\n\nfunction parseTableData({\n  aggregationLevel,\n  category,\n  interval\n}, dataPoints) {\n  const fields = category === FAVORITE_VIEWS ? FIELDS[category][aggregationLevel] : FIELDS[category];\n  return {\n    headers: fields.map(({\n      label\n    }) => label),\n    rows: dataPoints.map(dataPoint => fields.map(field => {\n      if (field.key === dateField.key) {\n        return getDisplayDateForInterval(dataPoint, interval);\n      }\n\n      if (field.key === createdField.key) {\n        return getDisplayDateFromIsoString(dataPoint[field.key]);\n      }\n\n      return dataPoint[field.key];\n    }))\n  };\n}\n\nexport default connect(mapStateToProps)(Table);","import React, { Component } from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { CircularLoader, ScreenCover } from '@dhis2/ui-core';\nimport { LOADING, ERROR } from '../constants/statuses';\nimport { initApp } from '../actions';\nimport Error from './Error';\nimport FilterSideBar from './FilterSideBar';\nimport Chart from './Chart';\nimport Table from './Table';\nexport class UsageAnalytics extends Component {\n  componentDidMount() {\n    this.props.initApp();\n  }\n\n  render() {\n    const {\n      appStatus\n    } = this.props;\n\n    if (appStatus === LOADING) {\n      return <ScreenCover>\n                    <CircularLoader large />\n                </ScreenCover>;\n    }\n\n    if (appStatus === ERROR) {\n      return <Error message={i18n.t('Error loading application.')} />;\n    }\n\n    return <main className=\"uaa-container\">\n                <FilterSideBar />\n                <section className=\"uaa-content\">\n                    <Chart />\n                    <Table />\n                </section>\n            </main>;\n  }\n\n}\nUsageAnalytics.propTypes = {\n  appStatus: PropTypes.string,\n  initApp: PropTypes.func\n};\n\nconst mapStateToProps = ({\n  appStatus\n}) => ({\n  appStatus\n});\n\nexport default connect(mapStateToProps, {\n  initApp\n})(UsageAnalytics);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { useConfig } from '@dhis2/app-runtime';\nimport store from '../store';\nimport api from '../api';\nimport UsageAnalytics from './UsageAnalytics';\nimport '../index.css';\n\nfunction App() {\n  const {\n    baseUrl\n  } = useConfig();\n  api.setBaseUrl(baseUrl);\n  return <Provider store={store}>\n            <UsageAnalytics />\n        </Provider>;\n}\n\nexport default App;"],"sourceRoot":""}