{"version":3,"sources":["D2App/components/Layout/LayoutContainer.module.css","D2App/components/Layout/LayoutSidebar.module.css","D2App/components/Layout/LayoutContent.module.css","D2App/components/AppTitle/AppTitle.module.css","D2App/components/Charts/ChartHeader.module.css","D2App/components/Charts/ChartWrapper.module.css","D2App/constants/categories.js","D2App/constants/intervals.js","D2App/constants/aggregations.js","D2App/constants/chartTypes.js","D2App/constants/eventTypes.js","D2App/constants/pageSizes.js","D2App/constants/sortOrders.js","D2App/components/FilterFields/DateRangeField.js","D2App/components/FilterFields/IntervalField.js","D2App/components/FilterFields/AggregationField.js","D2App/components/FilterFields/ChartTypeField.js","D2App/components/FilterFields/EventTypeField.js","D2App/components/FilterFields/PageSizeField.js","D2App/components/FilterFields/SortOrderField.js","D2App/components/FilterFields/FilterFields.js","D2App/components/Layout/LayoutContainer.js","D2App/components/Layout/LayoutSidebar.js","D2App/components/Layout/LayoutContent.js","D2App/components/CategoryField/CategoryField.js","D2App/components/AppTitle/AppTitle.js","D2App/utils/date.js","D2App/components/Tables/TableWrapper.js","D2App/components/Tables/DataValuesTable.js","D2App/components/Charts/ChartHeader.js","D2App/components/Charts/ChartWrapper.js","D2App/components/Charts/options.js","D2App/components/Charts/DataValuesChart.js","D2App/components/Charts/selectors.js","D2App/components/Queries/TopFavoritesQuery.js","D2App/components/Queries/DataStatisticsQuery.js","D2App/components/Visualization/Visualization.js","D2App/components/App/createDefaultDates.js","D2App/components/App/App.js","D2App/components/App/index.js"],"names":["module","exports","categories","value","label","i18n","t","subtitle","intervals","aggregations","chartTypes","eventTypes","pageSizes","sortOrders","DateRangeField","startDate","setStartDate","endDate","setEndDate","className","type","onChange","IntervalField","interval","setInterval","selected","map","key","AggregationField","aggregation","setAggregation","ChartTypeField","chartType","setChartType","EventTypeField","eventType","setEventType","PageSizeField","pageSize","setPageSize","SortOrderField","sortOrder","setSortOrder","FilterFields","category","isTopFavorites","isFavoriteViews","Fragment","LayoutContainer","children","styles","container","LayoutSidebar","sidebar","LayoutContent","content","CategoryField","setCategory","AppTitle","title","formatIntervalDate","year","month","week","day","moment","format","zeroIndexedMonth","TableWrapper","DataValuesTable","data","savedDataValues","formatted","ChartHeader","ChartWrapper","outerContainer","innerContainer","chartContainer","options","animation","duration","legend","position","maintainAspectRatio","elements","line","tension","fill","backgroundColor","scales","yAxes","scaleLabel","display","labelString","DataValuesChart","selectedCategory","CATEGORIES","find","getTitles","labels","getLabels","datasets","d","borderColor","getDataValuesDatasets","query","favorites","resource","params","TopFavoritesQuery","useDataQuery","lazy","variables","loading","error","called","refetch","useEffect","dataStatistics","DataStatisticsQuery","stale","setStale","onDone","onComplete","onError","Visualization","JSON","stringify","createDefaultDates","initialStartDate","subtract","initialEndDate","App","useState"],"mappings":"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","file":"static/js/app.07454e08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LayoutContainer_container__2gt-1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"LayoutSidebar_sidebar__38x-X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"LayoutContent_content__3pEdj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"AppTitle_title__mjsfQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ChartHeader_title__ff7A2\",\"subtitle\":\"ChartHeader_subtitle__2JAVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerContainer\":\"ChartWrapper_outerContainer__2BU2T\",\"innerContainer\":\"ChartWrapper_innerContainer__5ZEsg\",\"chartContainer\":\"ChartWrapper_chartContainer__jt1gD\"};","import i18n from '@dhis2/d2-i18n';\nexport const FAVORITE_VIEWS = 'FAVORITE_VIEWS';\nexport const FAVORITES_SAVED = 'FAVORITES_SAVED';\nexport const USERS = 'USERS';\nexport const TOP_FAVORITES = 'TOP_FAVORITES';\nexport const DATA_VALUES = 'DATA_VALUES';\nconst categories = [{\n  value: FAVORITE_VIEWS,\n  label: i18n.t('Favorite views'),\n  subtitle: i18n.t('Number of times users looked at analysis favorites')\n}, {\n  value: FAVORITES_SAVED,\n  label: i18n.t('Favorites saved'),\n  subtitle: i18n.t('Number of analysis favorites created by users')\n}, {\n  value: USERS,\n  label: i18n.t('Users'),\n  subtitle: i18n.t('Number of users in the system')\n}, {\n  value: TOP_FAVORITES,\n  label: i18n.t('Top favorites')\n}, {\n  value: DATA_VALUES,\n  label: i18n.t('Data values'),\n  subtitle: i18n.t('Number of data values saved in the system')\n}];\nexport default categories;","import i18n from '@dhis2/d2-i18n';\nexport const DAY = 'DAY';\nexport const WEEK = 'WEEK';\nexport const MONTH = 'MONTH';\nexport const YEAR = 'YEAR';\nconst intervals = [{\n  value: DAY,\n  label: i18n.t('Day')\n}, {\n  value: WEEK,\n  label: i18n.t('Week')\n}, {\n  value: MONTH,\n  label: i18n.t('Month')\n}, {\n  value: YEAR,\n  label: i18n.t('Year')\n}];\nexport default intervals;","import i18n from '@dhis2/d2-i18n';\nexport const SUM = 'SUM';\nexport const AVERAGE = 'AVERAGE';\nconst aggregations = [{\n  value: SUM,\n  label: i18n.t('Sum')\n}, {\n  value: AVERAGE,\n  label: i18n.t('Average')\n}];\nexport default aggregations;","import i18n from '@dhis2/d2-i18n';\nexport const ALL = 'ALL';\nexport const TOTAL = 'TOTAL';\nconst chartTypes = [{\n  value: ALL,\n  label: i18n.t('All')\n}, {\n  value: TOTAL,\n  label: i18n.t('Total')\n}];\nexport default chartTypes;","import i18n from '@dhis2/d2-i18n';\nexport const CHART_VIEW = 'CHART_VIEW';\nexport const MAP_VIEW = 'MAP_VIEW';\nexport const REPORT_TABLE_VIEW = 'REPORT_TABLE_VIEW';\nexport const EVENT_REPORT_VIEW = 'EVENT_REPORT_VIEW';\nexport const EVENT_CHART_VIEW = 'EVENT_CHART_VIEW';\nexport const DASHBOARD_VIEW = 'DASHBOARD_VIEW';\nexport const DATA_SET_REPORT_VIEW = 'DATA_SET_REPORT_VIEW';\nconst eventTypes = [{\n  value: CHART_VIEW,\n  label: i18n.t('Chart')\n}, {\n  value: MAP_VIEW,\n  label: i18n.t('Map')\n}, {\n  value: REPORT_TABLE_VIEW,\n  label: i18n.t('Report table')\n}, {\n  value: EVENT_REPORT_VIEW,\n  label: i18n.t('Event report')\n}, {\n  value: EVENT_CHART_VIEW,\n  label: i18n.t('Event chart')\n}, {\n  value: DASHBOARD_VIEW,\n  label: i18n.t('Dashboard')\n}, {\n  value: DATA_SET_REPORT_VIEW,\n  label: i18n.t('Data set report')\n}];\nexport default eventTypes;","export const PS_5 = '5';\nexport const PS_10 = '10';\nexport const PS_15 = '15';\nexport const PS_20 = '20';\nexport const PS_25 = '25';\nconst pageSizes = [{\n  value: PS_5,\n  label: '5'\n}, {\n  value: PS_10,\n  label: '10'\n}, {\n  value: PS_15,\n  label: '15'\n}, {\n  value: PS_20,\n  label: '20'\n}, {\n  value: PS_25,\n  label: '25'\n}];\nexport default pageSizes;","import i18n from '@dhis2/d2-i18n';\nexport const ASC = 'ASC';\nexport const DESC = 'DESC';\nconst sortOrders = [{\n  value: ASC,\n  label: i18n.t('Ascending')\n}, {\n  value: DESC,\n  label: i18n.t('Descending')\n}];\nexport default sortOrders;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { InputField } from '@dhis2/ui';\n\nconst DateRangeField = ({\n  startDate,\n  setStartDate,\n  endDate,\n  setEndDate\n}) => <div className=\"uaa-date-range\">\n        <InputField label={i18n.t('Start Date')} type=\"date\" value={startDate} onChange={({\n    value\n  }) => setStartDate(value)} />\n        <InputField label={i18n.t('End Date')} type=\"date\" value={endDate} onChange={({\n    value\n  }) => setEndDate(value)} />\n    </div>;\n\nDateRangeField.propTypes = {\n  endDate: PropTypes.string.isRequired,\n  setEndDate: PropTypes.func.isRequired,\n  setStartDate: PropTypes.func.isRequired,\n  startDate: PropTypes.string.isRequired\n};\nexport default DateRangeField;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport intervals from '../../constants/intervals.js';\n\nconst IntervalField = ({\n  interval,\n  setInterval\n}) => <SingleSelectField selected={interval} onChange={({\n  selected\n}) => {\n  setInterval(selected);\n}} label={i18n.t('Interval')}>\n        {intervals.map(({\n    label,\n    value\n  }) => <SingleSelectOption label={label} key={value} value={value} />)}\n    </SingleSelectField>;\n\nIntervalField.propTypes = {\n  interval: PropTypes.string.isRequired,\n  setInterval: PropTypes.func.isRequired\n};\nexport default IntervalField;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport aggregations from '../../constants/aggregations.js';\n\nconst AggregationField = ({\n  aggregation,\n  setAggregation\n}) => <SingleSelectField selected={aggregation} onChange={({\n  selected\n}) => {\n  setAggregation(selected);\n}} label={i18n.t('Aggregation level')}>\n        {aggregations.map(({\n    label,\n    value\n  }) => <SingleSelectOption label={label} key={value} value={value} />)}\n    </SingleSelectField>;\n\nAggregationField.propTypes = {\n  aggregation: PropTypes.string.isRequired,\n  setAggregation: PropTypes.func.isRequired\n};\nexport default AggregationField;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport chartTypes from '../../constants/chartTypes.js';\n\nconst ChartTypeField = ({\n  chartType,\n  setChartType\n}) => <SingleSelectField selected={chartType} onChange={({\n  selected\n}) => {\n  setChartType(selected);\n}} label={i18n.t('Chart type')}>\n        {chartTypes.map(({\n    label,\n    value\n  }) => <SingleSelectOption label={label} key={value} value={value} />)}\n    </SingleSelectField>;\n\nChartTypeField.propTypes = {\n  chartType: PropTypes.string.isRequired,\n  setChartType: PropTypes.func.isRequired\n};\nexport default ChartTypeField;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport eventTypes from '../../constants/eventTypes.js';\n\nconst EventTypeField = ({\n  eventType,\n  setEventType\n}) => <SingleSelectField selected={eventType} onChange={({\n  selected\n}) => {\n  setEventType(selected);\n}} label={i18n.t('Event type')}>\n        {eventTypes.map(({\n    label,\n    value\n  }) => <SingleSelectOption label={label} key={value} value={value} />)}\n    </SingleSelectField>;\n\nEventTypeField.propTypes = {\n  eventType: PropTypes.string.isRequired,\n  setEventType: PropTypes.func.isRequired\n};\nexport default EventTypeField;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport pageSizes from '../../constants/pageSizes.js';\n\nconst PageSizeField = ({\n  pageSize,\n  setPageSize\n}) => <SingleSelectField selected={pageSize} onChange={({\n  selected\n}) => {\n  setPageSize(selected);\n}} label={i18n.t('Page size')}>\n        {pageSizes.map(({\n    label,\n    value\n  }) => <SingleSelectOption label={label} key={value} value={value} />)}\n    </SingleSelectField>;\n\nPageSizeField.propTypes = {\n  pageSize: PropTypes.string.isRequired,\n  setPageSize: PropTypes.func.isRequired\n};\nexport default PageSizeField;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport sortOrders from '../../constants/sortOrders.js';\n\nconst SortOrderField = ({\n  sortOrder,\n  setSortOrder\n}) => <SingleSelectField selected={sortOrder} onChange={({\n  selected\n}) => {\n  setSortOrder(selected);\n}} label={i18n.t('Sort order')}>\n        {sortOrders.map(({\n    label,\n    value\n  }) => <SingleSelectOption label={label} key={value} value={value} />)}\n    </SingleSelectField>;\n\nSortOrderField.propTypes = {\n  setSortOrder: PropTypes.func.isRequired,\n  sortOrder: PropTypes.string.isRequired\n};\nexport default SortOrderField;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { FAVORITE_VIEWS, TOP_FAVORITES } from '../../constants/categories.js';\nimport DateRangeField from './DateRangeField.js';\nimport IntervalField from './IntervalField.js';\nimport AggregationField from './AggregationField.js';\nimport ChartTypeField from './ChartTypeField.js';\nimport EventTypeField from './EventTypeField.js';\nimport PageSizeField from './PageSizeField.js';\nimport SortOrderField from './SortOrderField.js';\n\nconst FilterFields = ({\n  category,\n  startDate,\n  setStartDate,\n  endDate,\n  setEndDate,\n  interval,\n  setInterval,\n  aggregation,\n  setAggregation,\n  chartType,\n  setChartType,\n  eventType,\n  setEventType,\n  pageSize,\n  setPageSize,\n  sortOrder,\n  setSortOrder\n}) => {\n  // Category checks\n  const isTopFavorites = category === TOP_FAVORITES;\n  const isFavoriteViews = category === FAVORITE_VIEWS;\n  return <React.Fragment>\n            {!isTopFavorites && <React.Fragment>\n                    <DateRangeField startDate={startDate} setStartDate={setStartDate} endDate={endDate} setEndDate={setEndDate} />\n                    <IntervalField interval={interval} setInterval={setInterval} />\n                </React.Fragment>}\n            {isFavoriteViews && <React.Fragment>\n                    <AggregationField aggregation={aggregation} setAggregation={setAggregation} />\n                    <ChartTypeField chartType={chartType} setChartType={setChartType} />\n                </React.Fragment>}\n            {isTopFavorites && <React.Fragment>\n                    <EventTypeField eventType={eventType} setEventType={setEventType} />\n                    <PageSizeField pageSize={pageSize} setPageSize={setPageSize} />\n                    <SortOrderField sortOrder={sortOrder} setSortOrder={setSortOrder} />\n                </React.Fragment>}\n        </React.Fragment>;\n};\n\nFilterFields.propTypes = {\n  aggregation: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  chartType: PropTypes.string.isRequired,\n  endDate: PropTypes.string.isRequired,\n  eventType: PropTypes.string.isRequired,\n  interval: PropTypes.string.isRequired,\n  pageSize: PropTypes.string.isRequired,\n  setAggregation: PropTypes.func.isRequired,\n  setChartType: PropTypes.func.isRequired,\n  setEndDate: PropTypes.func.isRequired,\n  setEventType: PropTypes.func.isRequired,\n  setInterval: PropTypes.func.isRequired,\n  setPageSize: PropTypes.func.isRequired,\n  setSortOrder: PropTypes.func.isRequired,\n  setStartDate: PropTypes.func.isRequired,\n  sortOrder: PropTypes.string.isRequired,\n  startDate: PropTypes.string.isRequired\n};\nexport default FilterFields;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport styles from './LayoutContainer.module.css';\n\nconst LayoutContainer = ({\n  children\n}) => <main className={styles.container}>{children}</main>;\n\nLayoutContainer.propTypes = {\n  children: PropTypes.node\n};\nexport default LayoutContainer;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport styles from './LayoutSidebar.module.css';\n\nconst LayoutSidebar = ({\n  children\n}) => <aside className={styles.sidebar}>{children}</aside>;\n\nLayoutSidebar.propTypes = {\n  children: PropTypes.node\n};\nexport default LayoutSidebar;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport styles from './LayoutContent.module.css';\n\nconst LayoutContent = ({\n  children\n}) => <section className={styles.content}>{children}</section>;\n\nLayoutContent.propTypes = {\n  children: PropTypes.node\n};\nexport default LayoutContent;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { SingleSelectField, SingleSelectOption } from '@dhis2/ui';\nimport categories from '../../constants/categories.js';\n\nconst CategoryField = ({\n  category,\n  setCategory\n}) => <SingleSelectField selected={category} onChange={({\n  selected\n}) => {\n  setCategory(selected);\n}} label={i18n.t('Category')}>\n        {categories.map(({\n    label,\n    value\n  }) => <SingleSelectOption label={label} key={value} value={value} />)}\n    </SingleSelectField>;\n\nCategoryField.propTypes = {\n  category: PropTypes.string.isRequired,\n  setCategory: PropTypes.func.isRequired\n};\nexport default CategoryField;","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport styles from './AppTitle.module.css';\n\nconst AppTitle = () => <h1 className={styles.title}>{i18n.t('Usage Analytics')}</h1>;\n\nexport default AppTitle;","import i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport { YEAR, MONTH, WEEK, DAY } from '../constants/intervals.js';\n/**\n * This helpers receives 1-indexed months. But moment expects 0-indexed months,\n * so we subtract 1 whenever a month is provided to moment\n */\n\nexport const formatIntervalDate = ({\n  year,\n  month,\n  week,\n  day\n}, interval) => {\n  switch (interval) {\n    case YEAR:\n      {\n        return moment({\n          year\n        }).format('YYYY');\n      }\n\n    case MONTH:\n      {\n        const zeroIndexedMonth = month - 1;\n        const format = 'MMM YYYY';\n        return moment({\n          year,\n          month: zeroIndexedMonth\n        }).format(format);\n      }\n\n    case WEEK:\n      {\n        const format = `[${i18n.t('Week')}] [${week}] / YYYY`;\n        return moment({\n          year\n        }).format(format);\n      }\n\n    case DAY:\n      {\n        const zeroIndexedMonth = month - 1;\n        const format = 'MMM D, YYYY';\n        return moment({\n          year,\n          month: zeroIndexedMonth,\n          day\n        }).format(format);\n      }\n  }\n};","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { Card } from '@dhis2/ui';\n/**\n * The div wrapping the Card is used to constrain the 100% height of the Card.\n */\n\nconst TableWrapper = ({\n  children\n}) => <div>\n        <Card>{children}</Card>\n    </div>;\n\nTableWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default TableWrapper;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Table, TableHead, TableRowHead, TableRow, TableCell, TableCellHead, TableBody } from '@dhis2/ui';\nimport { formatIntervalDate } from '../../utils/date.js';\nimport TableWrapper from './TableWrapper.js';\n\nconst DataValuesTable = ({\n  data,\n  interval\n}) => <TableWrapper>\n        <Table>\n            <TableHead>\n                <TableRowHead>\n                    <TableCellHead>{i18n.t('Date')}</TableCellHead>\n                    <TableCellHead>{i18n.t('Data Values')}</TableCellHead>\n                </TableRowHead>\n            </TableHead>\n            <TableBody>\n                {data.map(({\n        year,\n        month,\n        week,\n        day,\n        savedDataValues\n      }) => {\n        const formatted = formatIntervalDate({\n          year,\n          month,\n          week,\n          day\n        }, interval);\n        return <TableRow key={formatted}>\n                            <TableCell>{formatted}</TableCell>\n                            <TableCell>{savedDataValues}</TableCell>\n                        </TableRow>;\n      })}\n            </TableBody>\n        </Table>\n    </TableWrapper>;\n\nDataValuesTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  interval: PropTypes.string.isRequired\n};\nexport default DataValuesTable;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport styles from './ChartHeader.module.css';\n\nconst ChartHeader = ({\n  title,\n  subtitle\n}) => <header>\n        <h4 className={styles.title}>{title}</h4>\n        <h6 className={styles.subtitle}>{subtitle}</h6>\n    </header>;\n\nChartHeader.propTypes = {\n  subtitle: PropTypes.string,\n  title: PropTypes.string\n};\nexport default ChartHeader;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { Card } from '@dhis2/ui';\nimport ChartHeader from './ChartHeader.js';\nimport styles from './ChartWrapper.module.css';\n/**\n * This wrapper expects a react-chartjs-2 <Line> component as child.\n */\n\nconst ChartWrapper = ({\n  children,\n  title,\n  subtitle\n}) => <div className={styles.outerContainer}>\n        <Card>\n            <div className={styles.innerContainer}>\n                <ChartHeader title={title} subtitle={subtitle} />\n                <div className={styles.chartContainer}>{children}</div>\n            </div>\n        </Card>\n    </div>;\n\nChartWrapper.propTypes = {\n  children: PropTypes.node,\n  subtitle: PropTypes.string,\n  title: PropTypes.string\n};\nexport default ChartWrapper;","import i18n from '@dhis2/d2-i18n';\n/**\n * These are the options we want to apply to each Line graph.\n * For documentation on the options see:\n *\n * - https://github.com/reactchartjs/react-chartjs-2\n * - https://www.chartjs.org/docs/latest/\n *\n */\n\nconst options = {\n  animation: {\n    duration: 180\n  },\n  legend: {\n    position: 'bottom'\n  },\n  maintainAspectRatio: false,\n  elements: {\n    line: {\n      tension: 0,\n      fill: false,\n      backgroundColor: 'rgba(0, 0, 0, 0)'\n    }\n  },\n  scales: {\n    yAxes: [{\n      scaleLabel: {\n        display: true,\n        labelString: i18n.t('Values')\n      }\n    }]\n  }\n};\nexport default options;","import React from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { Line } from 'react-chartjs-2';\nimport ChartWrapper from './ChartWrapper.js';\nimport { getTitles, getLabels, getDataValuesDatasets } from './selectors.js';\nimport options from './options.js';\n\nconst DataValuesChart = ({\n  data,\n  category,\n  interval\n}) => {\n  const {\n    title,\n    subtitle\n  } = getTitles(category);\n  const labels = getLabels(data, interval);\n  const datasets = getDataValuesDatasets(data);\n  return <ChartWrapper title={title} subtitle={subtitle}>\n            <Line data={{\n      labels,\n      datasets\n    }} options={options} />\n        </ChartWrapper>;\n};\n\nDataValuesChart.propTypes = {\n  category: PropTypes.string,\n  data: PropTypes.array,\n  interval: PropTypes.string\n};\nexport default DataValuesChart;","import i18n from '@dhis2/d2-i18n';\nimport CATEGORIES from '../../constants/categories';\nimport { formatIntervalDate } from '../../utils/date.js';\nexport const getTitles = selected => {\n  const selectedCategory = CATEGORIES.find(category => category.value === selected);\n  return {\n    title: selectedCategory.label,\n    subtitle: selectedCategory.subtitle\n  };\n};\nexport const getLabels = (data, interval) => data.map(({\n  year,\n  month,\n  week,\n  day\n}) => formatIntervalDate({\n  year,\n  month,\n  week,\n  day\n}, interval));\nexport const getDataValuesDatasets = data => [{\n  label: i18n.t('Data Values'),\n  data: data.map(d => d.savedDataValues),\n  borderColor: '#7cb5ec'\n}];","import React, { useEffect } from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport { CircularLoader, ComponentCover, CenteredContent } from '@dhis2/ui';\nconst query = {\n  favorites: {\n    resource: 'dataStatistics/favorites',\n    params: ({\n      eventType,\n      pageSize,\n      sortOrder\n    }) => ({\n      eventType,\n      pageSize,\n      sortOrder\n    })\n  }\n};\n\nconst TopFavoritesQuery = ({\n  eventType,\n  pageSize,\n  sortOrder,\n  children\n}) => {\n  const {\n    loading,\n    error,\n    data,\n    called,\n    refetch\n  } = useDataQuery(query, {\n    lazy: true,\n    variables: {\n      eventType,\n      pageSize,\n      sortOrder\n    }\n  });\n  useEffect(() => {\n    refetch({\n      eventType,\n      pageSize,\n      sortOrder\n    });\n  }, [eventType, pageSize, sortOrder]);\n\n  if (!called || loading) {\n    return <ComponentCover>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </ComponentCover>;\n  }\n\n  if (error) {\n    throw error;\n  }\n\n  return children(data.favorites);\n};\n\nTopFavoritesQuery.propTypes = {\n  children: PropTypes.func.isRequired,\n  eventType: PropTypes.string.isRequired,\n  pageSize: PropTypes.string.isRequired,\n  sortOrder: PropTypes.string.isRequired\n};\nexport default TopFavoritesQuery;","import React, { useEffect } from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { useDataQuery } from '@dhis2/app-runtime';\nimport { CircularLoader, ComponentCover, CenteredContent } from '@dhis2/ui';\nconst query = {\n  dataStatistics: {\n    resource: 'dataStatistics',\n    params: ({\n      startDate,\n      endDate,\n      interval\n    }) => ({\n      startDate,\n      endDate,\n      interval\n    })\n  }\n};\n\nconst DataStatisticsQuery = ({\n  startDate,\n  endDate,\n  interval,\n  stale,\n  setStale,\n  children\n}) => {\n  const onDone = () => setStale(false);\n\n  const {\n    loading,\n    error,\n    data,\n    called,\n    refetch\n  } = useDataQuery(query, {\n    lazy: true,\n    variables: {\n      startDate,\n      endDate,\n      interval\n    },\n    onComplete: onDone,\n    onError: onDone\n  });\n  useEffect(() => {\n    refetch({\n      startDate,\n      endDate,\n      interval\n    });\n  }, [startDate, endDate, interval]);\n\n  if (!called || loading || stale) {\n    return <ComponentCover>\n                <CenteredContent>\n                    <CircularLoader />\n                </CenteredContent>\n            </ComponentCover>;\n  }\n\n  if (error) {\n    throw error;\n  }\n\n  return children(data.dataStatistics);\n};\n\nDataStatisticsQuery.propTypes = {\n  children: PropTypes.func.isRequired,\n  endDate: PropTypes.string.isRequired,\n  interval: PropTypes.string.isRequired,\n  setStale: PropTypes.func.isRequired,\n  stale: PropTypes.bool.isRequired,\n  startDate: PropTypes.string.isRequired\n};\nexport default DataStatisticsQuery;","import React, { Fragment } from 'react';\nimport PropTypes from '@dhis2/prop-types';\nimport { DATA_VALUES } from '../../constants/categories.js';\nimport { DataValuesTable } from '../Tables';\nimport { DataValuesChart } from '../Charts';\nimport { TopFavoritesQuery, DataStatisticsQuery } from '../Queries';\n\nconst Visualization = ({\n  aggregation,\n  category,\n  chartType,\n  endDate,\n  eventType,\n  interval,\n  isTopFavorites,\n  pageSize,\n  setStale,\n  sortOrder,\n  stale,\n  startDate\n}) => {\n  if (isTopFavorites) {\n    return <TopFavoritesQuery eventType={eventType} pageSize={pageSize} sortOrder={sortOrder}>\n                {data => <pre>{JSON.stringify(data, null, 2)}</pre>}\n            </TopFavoritesQuery>;\n  }\n\n  return <DataStatisticsQuery startDate={startDate} endDate={endDate} interval={interval} setStale={setStale} stale={stale}>\n            {data => {\n      if (category === DATA_VALUES) {\n        return <Fragment>\n                            <DataValuesChart data={data} interval={interval} aggregation={aggregation} category={category} chartType={chartType} />\n                            <DataValuesTable data={data} interval={interval} />\n                        </Fragment>;\n      }\n\n      return null;\n    }}\n        </DataStatisticsQuery>;\n};\n\nVisualization.propTypes = {\n  isTopFavorites: PropTypes.bool.isRequired,\n  setStale: PropTypes.func.isRequired,\n  stale: PropTypes.bool.isRequired,\n  aggregation: PropTypes.string,\n  category: PropTypes.string,\n  chartType: PropTypes.string,\n  endDate: PropTypes.string,\n  eventType: PropTypes.string,\n  interval: PropTypes.string,\n  pageSize: PropTypes.string,\n  sortOrder: PropTypes.string,\n  startDate: PropTypes.string\n};\nexport default Visualization;","import moment from 'moment';\n/**\n * This creates the default start and end dates for the app state. The format\n * is YYYY-MM-DD because that's what a date input expects, and that's what these\n * dates will be used for.\n * The default is to have the end date be now, and the start date 4 months before\n * that.\n */\n\nconst createDefaultDates = () => {\n  const format = 'YYYY-MM-DD';\n  const initialStartDate = moment().subtract(4, 'months').format(format);\n  const initialEndDate = moment().format(format);\n  return {\n    initialStartDate,\n    initialEndDate\n  };\n};\n\nexport default createDefaultDates;","import React, { useState } from 'react';\nimport { FAVORITE_VIEWS, TOP_FAVORITES } from '../../constants/categories.js';\nimport { WEEK } from '../../constants/intervals.js';\nimport { SUM } from '../../constants/aggregations.js';\nimport { ALL } from '../../constants/chartTypes.js';\nimport { CHART_VIEW } from '../../constants/eventTypes.js';\nimport { PS_25 } from '../../constants/pageSizes.js';\nimport { ASC } from '../../constants/sortOrders.js';\nimport FilterFields from '../FilterFields';\nimport { LayoutContainer, LayoutSidebar, LayoutContent } from '../Layout';\nimport CategoryField from '../CategoryField';\nimport AppTitle from '../AppTitle';\nimport Visualization from '../Visualization';\nimport './App.css';\nimport createDefaultDates from './createDefaultDates.js';\n\nconst App = () => {\n  const {\n    initialStartDate,\n    initialEndDate\n  } = createDefaultDates(); // State\n\n  const [category, setCategory] = useState(FAVORITE_VIEWS);\n  const [startDate, setStartDate] = useState(initialStartDate);\n  const [endDate, setEndDate] = useState(initialEndDate);\n  const [interval, setInterval] = useState(WEEK);\n  const [aggregation, setAggregation] = useState(SUM);\n  const [chartType, setChartType] = useState(ALL);\n  const [eventType, setEventType] = useState(CHART_VIEW);\n  const [pageSize, setPageSize] = useState(PS_25);\n  const [sortOrder, setSortOrder] = useState(ASC);\n  /**\n   * The rendering of the different intervals in the DataValuesTable\n   * depends on the props and the data being in sync. To prevent stale\n   * props from being used we're tracking the stale status of interval.\n   */\n\n  const [stale, setStale] = useState(false);\n\n  const setStaleAndInterval = interval => {\n    setStale(true);\n    setInterval(interval);\n  };\n\n  const isTopFavorites = category === TOP_FAVORITES;\n  return <LayoutContainer>\n            <LayoutSidebar>\n                <AppTitle />\n                <CategoryField category={category} setCategory={setCategory} />\n                <FilterFields aggregation={aggregation} category={category} chartType={chartType} endDate={endDate} eventType={eventType} interval={interval} pageSize={pageSize} setAggregation={setAggregation} setChartType={setChartType} setEndDate={setEndDate} setEventType={setEventType} setInterval={setStaleAndInterval} setPageSize={setPageSize} setSortOrder={setSortOrder} setStartDate={setStartDate} sortOrder={sortOrder} startDate={startDate} />\n            </LayoutSidebar>\n            <LayoutContent>\n                <Visualization aggregation={aggregation} category={category} chartType={chartType} endDate={endDate} eventType={eventType} interval={interval} isTopFavorites={isTopFavorites} pageSize={pageSize} setStale={setStale} sortOrder={sortOrder} stale={stale} startDate={startDate} />\n            </LayoutContent>\n        </LayoutContainer>;\n};\n\nexport default App;","export { default } from './App';"],"sourceRoot":""}